// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import "oaidl.idl";
import "ocidl.idl";

[
  object,
  dual,
  uuid(2FCD14AF-B645-4351-8359-E80A0E202A0B),
  helpstring("ICompleteStatus Interface"),
  pointer_default(unique)
]
interface ICompleteStatus : IUnknown {
  [propget] HRESULT statusCode([out, retval] LONG*);
  [propget] HRESULT statusMessage([out, retval] BSTR*);
};

[
  object,
  oleautomation,
  uuid(7B416CFD-4216-4FD6-BD83-7C586054676E),
  helpstring("IUpdaterObserver Interface"),
  pointer_default(unique)
]
interface IUpdaterObserver : IUnknown {
  HRESULT OnComplete([in] ICompleteStatus* status);
};

[
  object,
  dual,
  uuid(63B8FFB1-5314-48C9-9C57-93EC8BC6184B),
  helpstring("IUpdater Interface"),
  pointer_default(unique)
]
interface IUpdater : IUnknown {
  HRESULT CheckForUpdate([in, string] const WCHAR* app_id);
  HRESULT Register([in, string] const WCHAR* app_id,
                   [in, string] const WCHAR* brand_code,
                   [in, string] const WCHAR* tag,
                   [in, string] const WCHAR* version,
                   [in, string] const WCHAR* existence_checker_path);
  HRESULT Update([in, string] const WCHAR* app_id);
  HRESULT UpdateAll([in] IUpdaterObserver* observer);
};

[
  uuid(69464FF0-D9EC-4037-A35F-8AE4358106CC),
  version(1.0),
  helpstring("Omaha 4.0 Type Library")
]
library UpdaterLib {
  importlib("stdole2.tlb");

  interface IUpdater;

  [
    uuid(158428A4-6014-4978-83BA-9FAD0DABE791),
    helpstring("Updater Class")
  ]
  coclass UpdaterClass
  {
    [default] interface IUnknown;
  }

  [
    uuid(415FD747-D79E-42D7-93AC-1BA6E5FD4E93),
    helpstring("Updater Service Class")
  ]
  coclass UpdaterServiceClass
  {
    [default] interface IUnknown;
  }

};
