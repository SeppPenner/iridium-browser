From fffc7e171d7ee5f80360fb8e37da838c46e8c2de Mon Sep 17 00:00:00 2001
From: Joachim Bauch <jojo@struktur.de>
Date: Tue, 7 Jul 2015 17:02:09 +0200
Subject: [PATCH 43/56] safe_browsing: disable incident reporting

Disables the safebrowsing incident reporting where you could upload
information about a blocked URL to Google (also added a trk prefix to
the URL so we get notified if this happens again in the future).
---
 .../incident_reporting/incident_report_uploader_impl.cc        |  2 +-
 .../incident_reporting/incident_reporting_service.cc           |  3 +++
 chrome/browser/safe_browsing/safe_browsing_blocking_page.cc    | 10 ++++++----
 chrome/browser/safe_browsing/safe_browsing_service.cc          |  2 ++
 4 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/chrome/browser/safe_browsing/incident_reporting/incident_report_uploader_impl.cc b/chrome/browser/safe_browsing/incident_reporting/incident_report_uploader_impl.cc
index b5e7684..01627a4 100644
--- a/chrome/browser/safe_browsing/incident_reporting/incident_report_uploader_impl.cc
+++ b/chrome/browser/safe_browsing/incident_reporting/incident_report_uploader_impl.cc
@@ -17,7 +17,7 @@ namespace safe_browsing {
 namespace {
 
 const char kSbIncidentReportUrl[] =
-    "https://sb-ssl.google.com/safebrowsing/clientreport/incident";
+    "trk:268:https://sb-ssl.google.com/safebrowsing/clientreport/incident";
 
 }  // namespace
 
diff --git a/chrome/browser/safe_browsing/incident_reporting/incident_reporting_service.cc b/chrome/browser/safe_browsing/incident_reporting/incident_reporting_service.cc
index 9dc0c27..35fbcd4 100644
--- a/chrome/browser/safe_browsing/incident_reporting/incident_reporting_service.cc
+++ b/chrome/browser/safe_browsing/incident_reporting/incident_reporting_service.cc
@@ -284,6 +284,8 @@ IncidentReportingService::UploadContext::~UploadContext() {
 
 // static
 bool IncidentReportingService::IsEnabledForProfile(Profile* profile) {
+  return false;
+#if 0
   if (profile->IsOffTheRecord())
     return false;
   if (!profile->GetPrefs()->GetBoolean(prefs::kSafeBrowsingEnabled))
@@ -292,6 +294,7 @@ bool IncidentReportingService::IsEnabledForProfile(Profile* profile) {
     return true;
   return profile->GetPrefs()->GetBoolean(
       prefs::kSafeBrowsingExtendedReportingEnabled);
+#endif
 }
 
 IncidentReportingService::IncidentReportingService(
diff --git a/chrome/browser/safe_browsing/safe_browsing_blocking_page.cc b/chrome/browser/safe_browsing/safe_browsing_blocking_page.cc
index 342e59d..ddac6f2 100644
--- a/chrome/browser/safe_browsing/safe_browsing_blocking_page.cc
+++ b/chrome/browser/safe_browsing/safe_browsing_blocking_page.cc
@@ -56,17 +56,17 @@ namespace {
 // diagnostic page.
 #if defined(GOOGLE_CHROME_BUILD)
 const char kSbDiagnosticUrl[] =
-    "https://www.google.com/safebrowsing/diagnostic?site=%s&client=googlechrome";
+	/* trk:227 */ "https://www.google.com/safebrowsing/diagnostic?site=%s&client=googlechrome";
 #else
 const char kSbDiagnosticUrl[] =
-    "https://www.google.com/safebrowsing/diagnostic?site=%s&client=chromium";
+	/* trk:228 */ "https://www.google.com/safebrowsing/diagnostic?site=%s&client=chromium";
 #endif
 
 // URL for malware and phishing, V2.
 const char kLearnMoreMalwareUrlV2[] =
-    "https://www.google.com/transparencyreport/safebrowsing/";
+	/* trk:225 */ "https://www.google.com/transparencyreport/safebrowsing/";
 const char kLearnMorePhishingUrlV2[] =
-    "https://www.google.com/transparencyreport/safebrowsing/";
+	/* trk:226 */ "https://www.google.com/transparencyreport/safebrowsing/";
 
 // Constants for the V4 phishing string upgrades.
 const char kSocialEngineeringTrial[] = "SafeBrowsingSocialEngineeringStrings";
@@ -616,6 +616,7 @@ void SafeBrowsingBlockingPage::PopulateInterstitialStrings(
 
 void SafeBrowsingBlockingPage::PopulateExtendedReportingOption(
     base::DictionaryValue* load_time_data) {
+#if 0
   // Only show checkbox if !(HTTPS || incognito-mode).
   const bool show = CanShowMalwareDetailsOption();
   load_time_data->SetBoolean(interstitials::kDisplayCheckBox, show);
@@ -632,6 +633,7 @@ void SafeBrowsingBlockingPage::PopulateExtendedReportingOption(
   load_time_data->SetBoolean(
       interstitials::kBoxChecked,
       IsPrefEnabled(prefs::kSafeBrowsingExtendedReportingEnabled));
+#endif
 }
 
 void SafeBrowsingBlockingPage::PopulateMalwareLoadTimeData(
diff --git a/chrome/browser/safe_browsing/safe_browsing_service.cc b/chrome/browser/safe_browsing/safe_browsing_service.cc
index d01f175..835107e 100644
--- a/chrome/browser/safe_browsing/safe_browsing_service.cc
+++ b/chrome/browser/safe_browsing/safe_browsing_service.cc
@@ -400,9 +400,11 @@ SafeBrowsingService::CreateIncidentReportingService() {
 
 void SafeBrowsingService::RegisterAllDelayedAnalysis() {
 #if defined(FULL_SAFE_BROWSING)
+#if 0
   safe_browsing::RegisterBinaryIntegrityAnalysis();
   safe_browsing::RegisterBlacklistLoadAnalysis();
   safe_browsing::RegisterVariationsSeedSignatureAnalysis();
+#endif
 #else
   NOTREACHED();
 #endif
-- 
2.4.3

