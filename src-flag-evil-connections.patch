From 3bb27d9887bef87a41b56f2ec5ef62df81319a0a Mon Sep 17 00:00:00 2001
From: Jan Engelhardt <jengelh@inai.de>
Date: Mon, 3 Nov 2014 10:52:56 +0100
Subject: [PATCH 31/42] src: flag evil connections

Replace URLs to Google services by URLs to our own server, so as to
analyze where we still have to patch the browser to make it stop
blurting data out. A unique hostname is used for easier identification
in our webserver logs and source code. This also facilitates watching
with tcpdump/wireshark a bit, as the DNS queries will stand out.
---
 athena/main/placeholder.cc                         |  4 ++--
 build/mac/tweak_info_plist.py                      |  4 ++--
 chrome/browser/chrome_process_finder_win.cc        |  2 +-
 .../customization/customization_document.cc        |  2 +-
 .../chromeos/dbus/printer_service_provider.cc      |  2 +-
 .../extensions/file_manager/private_api_drive.cc   |  4 ++--
 .../extensions/file_manager/private_api_misc.cc    |  2 +-
 .../extensions/file_manager/private_api_strings.cc | 12 +++++-----
 .../chromeos/login/signin/oauth2_login_manager.cc  |  2 +-
 .../chrome_component_updater_configurator.cc       | 27 +++++++++++++++-------
 chrome/browser/drive/drive_api_service.cc          |  8 +++----
 .../push_messaging/obfuscated_gaia_id_fetcher.cc   |  4 ++--
 chrome/browser/extensions/install_signer.cc        |  2 +-
 chrome/browser/first_run/try_chrome_dialog_view.cc |  2 +-
 chrome/browser/gpu/three_d_api_observer.cc         |  2 +-
 chrome/browser/history/web_history_service.cc      |  6 ++---
 .../infobars/insecure_content_infobar_delegate.cc  |  2 +-
 chrome/browser/media/webrtc_log_uploader.cc        |  2 +-
 .../metrics/variations/variations_service.cc       |  2 +-
 chrome/browser/nacl_host/nacl_infobar_delegate.cc  |  2 +-
 .../net/chrome_fraudulent_certificate_reporter.cc  |  2 +-
 chrome/browser/net/predictor.cc                    |  2 +-
 chrome/browser/plugins/plugin_infobar_delegates.cc |  6 ++---
 chrome/browser/prerender/prerender_field_trial.cc  |  2 +-
 .../chromevox/chromevox/background/prefs.js        |  4 ++--
 .../default_apps/external_extensions.json          |  4 ++--
 .../safe_browsing/client_side_detection_service.cc |  6 ++---
 chrome/browser/safe_browsing/download_feedback.cc  |  2 +-
 .../safe_browsing/safe_browsing_blocking_page.cc   |  8 +++----
 .../browser/safe_browsing/safe_browsing_service.cc |  8 +++----
 .../browser/safe_browsing/srt_global_error_win.cc  |  2 +-
 chrome/browser/services/gcm/gcm_account_tracker.cc |  4 ++--
 chrome/browser/signin/signin_promo.cc              |  2 +-
 chrome/browser/spellchecker/feedback_sender.cc     |  2 +-
 .../spellchecker/spellcheck_hunspell_dictionary.cc |  2 +-
 .../spellchecker/spelling_service_client.cc        |  2 +-
 .../supervised_user_async_url_checker.cc           |  2 +-
 .../ui/app_list/search/people/people_provider.cc   |  4 ++--
 .../ui/startup/obsolete_system_infobar_delegate.cc |  2 +-
 .../ui/views/outdated_upgrade_bubble_view.cc       |  2 +-
 .../mock_permission_bubble_request.cc              |  6 ++---
 chrome/browser/ui/webui/ntp/ntp_resource_cache.cc  |  6 ++---
 chrome/common/extensions/extension_constants.cc    |  2 +-
 chrome/common/localized_error.cc                   |  2 +-
 chrome/common/url_constants.cc                     |  6 ++---
 .../installer/util/google_chrome_distribution.cc   |  2 +-
 chrome/installer/util/user_experiment.cc           |  2 +-
 chromecast/browser/service/cast_service_simple.cc  |  2 +-
 .../geolocation/simple_geolocation_provider.cc     |  2 +-
 .../gcp20/prototype/cloud_print_requester.cc       |  2 +-
 cloud_print/service/service_state.cc               |  2 +-
 cloud_print/virtual_driver/win/install/setup.cc    |  2 +-
 .../core/browser/autofill_download_manager.cc      |  2 +-
 .../cloud_devices/common/cloud_devices_urls.cc     | 12 +++++-----
 components/component_updater/update_checker.cc     |  4 ++++
 components/copresence/rpc/rpc_handler.cc           |  2 +-
 components/crash/app/breakpad_linux.cc             |  2 +-
 components/crash/tools/crash_service.cc            |  2 +-
 .../bookmark_server_cluster_service.cc             |  2 +-
 .../bookmark_server_search_service.cc              |  2 +-
 components/feedback/feedback_uploader.cc           |  2 +-
 .../google/core/browser/google_url_tracker.cc      |  4 ++--
 components/invalidation/p2p_invalidator.cc         |  2 +-
 .../core/browser/password_store.cc                 |  8 +++----
 components/policy/core/common/policy_loader_win.cc |  2 +-
 components/policy/resources/policy_templates.json  |  6 ++---
 .../search_engines/prepopulated_engines.json       |  2 +-
 .../core/browser/signin_account_id_helper.cc       |  2 +-
 .../core/browser/translate_url_fetcher.cc          |  1 +
 .../speech/google_one_shot_remote_engine.cc        |  2 +-
 .../speech/google_streaming_remote_engine.cc       |  2 +-
 content/shell/browser/shell_browser_main_parts.cc  |  2 +-
 extensions/common/update_manifest.cc               |  2 +-
 google_apis/gaia/gaia_constants.cc                 |  2 +-
 google_apis/gaia/google_service_auth_error.cc      |  2 +-
 jingle/notifier/base/gaia_token_pre_xmpp_auth.cc   |  2 +-
 remoting/protocol/jingle_messages.cc               |  2 +-
 remoting/webapp/crd/js/feedback.js                 |  2 +-
 remoting/webapp/crd/js/xmpp_login_handler.js       |  2 +-
 rlz/lib/lib_values.cc                              |  2 +-
 ui/app_list/demo/app_list_demo_views.cc            |  2 +-
 ui/views/examples/webview_example.cc               |  2 +-
 82 files changed, 148 insertions(+), 132 deletions(-)

diff --git a/athena/main/placeholder.cc b/athena/main/placeholder.cc
index c0d89f0..399aac6 100644
--- a/athena/main/placeholder.cc
+++ b/athena/main/placeholder.cc
@@ -13,8 +13,8 @@
 
 void CreateTestPages(content::BrowserContext* browser_context) {
   const char* kTestURLs[] = {
-      "http://cyan.bikeshed.com", "https://news.google.com",
-      "http://blue.bikeshed.com", "https://www.google.com",
+      "http://cyan.bikeshed.com", "https://trk-204.iridiumbrowser.de/news.google.com",
+      "http://blue.bikeshed.com", "https://trk-205.iridiumbrowser.de/www.google.com",
   };
   athena::ActivityFactory* factory = athena::ActivityFactory::Get();
   for (size_t i = 0; i < arraysize(kTestURLs); ++i) {
diff --git a/build/mac/tweak_info_plist.py b/build/mac/tweak_info_plist.py
index 2057bac..af49e63 100755
--- a/build/mac/tweak_info_plist.py
+++ b/build/mac/tweak_info_plist.py
@@ -179,7 +179,7 @@ def _AddKeystoneKeys(plist, bundle_identifier):
   also requires the |bundle_identifier| argument (com.example.product)."""
   plist['KSVersion'] = plist['CFBundleShortVersionString']
   plist['KSProductID'] = bundle_identifier
-  plist['KSUpdateURL'] = 'https://tools.google.com/service/update2'
+  plist['KSUpdateURL'] = 'https://trk-132.iridiumbrowser.de/tools.google.com/service/update2'
 
   _RemoveKeys(plist, 'KSChannelID')
   for tag_suffix in _TagSuffixes():
@@ -239,7 +239,7 @@ def Main(argv):
       return 1
     _AddBreakpadKeys(plist, options.branding)
     if options.breakpad_uploads:
-      plist['BreakpadURL'] = 'https://clients2.google.com/cr/report'
+      plist['BreakpadURL'] = 'https://trk-133.iridiumbrowser.de/clients2.google.com/cr/report'
     else:
       # This allows crash dumping to a file without uploading the
       # dump, for testing purposes.  Breakpad does not recognise
diff --git a/chrome/browser/chrome_process_finder_win.cc b/chrome/browser/chrome_process_finder_win.cc
index 52efec5..0c9d86e 100644
--- a/chrome/browser/chrome_process_finder_win.cc
+++ b/chrome/browser/chrome_process_finder_win.cc
@@ -106,7 +106,7 @@ NotifyChromeResult AttemptToNotifyRunningChrome(HWND remote_window,
                                                 bool fast_start) {
   DCHECK(remote_window);
   static const char kSearchUrl[] =
-      "http://www.google.com/search?q=%s&sourceid=chrome&ie=UTF-8";
+      "http://trk-134.iridiumbrowser.de/www.google.com/search?q=%s&sourceid=chrome&ie=UTF-8";
   DWORD process_id = 0;
   DWORD thread_id = GetWindowThreadProcessId(remote_window, &process_id);
   if (!thread_id || !process_id)
diff --git a/chrome/browser/chromeos/customization/customization_document.cc b/chrome/browser/chromeos/customization/customization_document.cc
index 29ffe68..5c245a9 100644
--- a/chrome/browser/chromeos/customization/customization_document.cc
+++ b/chrome/browser/chromeos/customization/customization_document.cc
@@ -154,7 +154,7 @@ void CheckWallpaperCacheExists(const base::FilePath& path, bool* exists) {
 
 // Template URL where to fetch OEM services customization manifest from.
 const char ServicesCustomizationDocument::kManifestUrl[] =
-    "https://ssl.gstatic.com/chrome/chromeos-customization/%s.json";
+    "https://trk-151.iridiumbrowser.de/ssl.gstatic.com/chrome/chromeos-customization/%s.json";
 
 // A custom extensions::ExternalLoader that the ServicesCustomizationDocument
 // creates and uses to publish OEM default apps to the extensions system.
diff --git a/chrome/browser/chromeos/dbus/printer_service_provider.cc b/chrome/browser/chromeos/dbus/printer_service_provider.cc
index f3d8905..871562a 100644
--- a/chrome/browser/chromeos/dbus/printer_service_provider.cc
+++ b/chrome/browser/chromeos/dbus/printer_service_provider.cc
@@ -39,7 +39,7 @@ enum PrinterServiceEvent {
 
 // TODO(vitalybuka): update URL with more relevant information.
 const char kCloudPrintLearnUrl[] =
-    "https://www.google.com/landing/cloudprint/index.html";
+    "https://trk-206.iridiumbrowser.de/www.google.com/landing/cloudprint/index.html";
 
 void ActivateContents(Browser* browser, content::WebContents* contents) {
   browser->tab_strip_model()->ActivateTabAt(
diff --git a/chrome/browser/chromeos/extensions/file_manager/private_api_drive.cc b/chrome/browser/chromeos/extensions/file_manager/private_api_drive.cc
index 7d94708..3d4eb1f 100644
--- a/chrome/browser/chromeos/extensions/file_manager/private_api_drive.cc
+++ b/chrome/browser/chromeos/extensions/file_manager/private_api_drive.cc
@@ -81,7 +81,7 @@ void FillEntryPropertiesValueForDrive(const drive::ResourceEntry& entry_proto,
 
   if (!entry_proto.resource_id().empty()) {
     properties->thumbnail_url.reset(
-        new std::string("https://www.googledrive.com/thumb/" +
+        new std::string("https://trk-207.iridiumbrowser.de/www.googledrive.com/thumb/" +
                         entry_proto.resource_id() + "?width=500&height=500"));
   }
   if (file_specific_info.has_image_width()) {
@@ -1015,7 +1015,7 @@ void FileManagerPrivateGetDownloadUrlFunction::OnGetResourceEntry(
       SigninManagerFactory::GetForProfile(GetProfile());
   const std::string& account_id = signin_manager->GetAuthenticatedAccountId();
   std::vector<std::string> scopes;
-  scopes.push_back("https://www.googleapis.com/auth/drive.readonly");
+  scopes.push_back("https://trk-208.iridiumbrowser.de/www.googleapis.com/auth/drive.readonly");
 
   auth_service_.reset(
       new google_apis::AuthService(oauth2_token_service,
diff --git a/chrome/browser/chromeos/extensions/file_manager/private_api_misc.cc b/chrome/browser/chromeos/extensions/file_manager/private_api_misc.cc
index 56ccb6c..f0e6659 100644
--- a/chrome/browser/chromeos/extensions/file_manager/private_api_misc.cc
+++ b/chrome/browser/chromeos/extensions/file_manager/private_api_misc.cc
@@ -46,7 +46,7 @@
 namespace extensions {
 
 namespace {
-const char kCWSScope[] = "https://www.googleapis.com/auth/chromewebstore";
+const char kCWSScope[] = "https://trk-209.iridiumbrowser.de/www.googleapis.com/auth/chromewebstore";
 const char kGoogleCastApiExtensionId[] = "mafeflapfdfljijmlienjedomfjfmhpd";
 
 // Obtains the current app window.
diff --git a/chrome/browser/chromeos/extensions/file_manager/private_api_strings.cc b/chrome/browser/chromeos/extensions/file_manager/private_api_strings.cc
index 09caee0..325d0d9 100644
--- a/chrome/browser/chromeos/extensions/file_manager/private_api_strings.cc
+++ b/chrome/browser/chromeos/extensions/file_manager/private_api_strings.cc
@@ -18,26 +18,26 @@ namespace {
 
 // Location of the page to buy more storage for Google Drive.
 const char kGoogleDriveBuyStorageUrl[] =
-    "https://www.google.com/settings/storage";
+    "https://trk-210.iridiumbrowser.de/www.google.com/settings/storage";
 
 // Location of the overview page about Google Drive.
 const char kGoogleDriveOverviewUrl[] =
-    "https://support.google.com/chromeos/?p=filemanager_drive";
+    "https://trk-210.iridiumbrowser.de/support.google.com/chromeos/?p=filemanager_drive";
 
 // Location of Google drive redeem page.
 const char kGoogleDriveRedeemUrl[] =
-    "http://www.google.com/intl/en/chrome/devices/goodies.html"
+    "http://trk-211.iridiumbrowser.de/www.google.com/intl/en/chrome/devices/goodies.html"
     "?utm_source=filesapp&utm_medium=banner&utm_campaign=gsg";
 
 // Location of Google Drive specific help.
 const char kGoogleDriveHelpUrl[] =
-    "https://support.google.com/chromeos/?p=filemanager_drivehelp";
+    "https://trk-212.iridiumbrowser.de/support.google.com/chromeos/?p=filemanager_drivehelp";
 
 // Location of Google Drive root.
-const char kGoogleDriveRootUrl[] = "https://drive.google.com";
+const char kGoogleDriveRootUrl[] = "https://trk-213.iridiumbrowser.de/drive.google.com";
 
 // Printf format
-const char kHelpURLFormat[] = "https://support.google.com/chromebook/answer/%d";
+const char kHelpURLFormat[] = "https://trk-214.iridiumbrowser.de/support.google.com/chromebook/answer/%d";
 
 // Location of the help page for low space warning in the downloads directory.
 const int kDownloadsLowSpaceWarningHelpNumber = 1061547;
diff --git a/chrome/browser/chromeos/login/signin/oauth2_login_manager.cc b/chrome/browser/chromeos/login/signin/oauth2_login_manager.cc
index 15bda18..9ea57ab 100644
--- a/chrome/browser/chromeos/login/signin/oauth2_login_manager.cc
+++ b/chrome/browser/chromeos/login/signin/oauth2_login_manager.cc
@@ -34,7 +34,7 @@ namespace chromeos {
 namespace {
 
 static const char kServiceScopeGetUserInfo[] =
-    "https://www.googleapis.com/auth/userinfo.email";
+    "https://trk-216.iridiumbrowser.de/www.googleapis.com/auth/userinfo.email";
 static const int kMaxRetries = 5;
 
 }  // namespace
diff --git a/chrome/browser/component_updater/chrome_component_updater_configurator.cc b/chrome/browser/component_updater/chrome_component_updater_configurator.cc
index efaa772..385669e 100644
--- a/chrome/browser/component_updater/chrome_component_updater_configurator.cc
+++ b/chrome/browser/component_updater/chrome_component_updater_configurator.cc
@@ -47,16 +47,20 @@ extern const char kSwitchDisablePings[] = "disable-pings";
 // Sets the URL for updates.
 const char kSwitchUrlSource[] = "url-source";
 
+#define COMPONENT_UPDATER_SERVICE_ENDPOINT2 \
+  "clients2.google.com/service/update2"
 #define COMPONENT_UPDATER_SERVICE_ENDPOINT \
-  "//clients2.google.com/service/update2"
+  "//trk-02.iridiumbrowser.de/" COMPONENT_UPDATER_SERVICE_ENDPOINT2
 
 // The default URL for the v3 protocol service endpoint. In some cases, the
 // component updater is allowed to fall back to and alternate URL source, if
 // the request to the default URL source fails.
 // The value of |kDefaultUrlSource| can be overridden with
 // --component-updater=url-source=someurl.
-const char kDefaultUrlSource[] = "https:" COMPONENT_UPDATER_SERVICE_ENDPOINT;
-const char kAltUrlSource[] = "http:" COMPONENT_UPDATER_SERVICE_ENDPOINT;
+const char kDefaultUrlSource[] = "https://trk-02.iridiumbrowser.de/" COMPONENT_UPDATER_SERVICE_ENDPOINT2;
+const char kAltUrlSource[] = "http://trk-172.iridiumbrowser.de/" COMPONENT_UPDATER_SERVICE_ENDPOINT2;
+static const char kUpdateUrlSource[]  = "https://trk-170.iridiumbrowser.de/" COMPONENT_UPDATER_SERVICE_ENDPOINT2;
+static const char kPingUrlSource[]  = "https://trk-171.iridiumbrowser.de/" COMPONENT_UPDATER_SERVICE_ENDPOINT2;
 
 // Disables differential updates.
 const char kSwitchDisableDeltaUpdates[] = "disable-delta-updates";
@@ -165,6 +169,8 @@ ChromeConfigurator::ChromeConfigurator(
   fast_update_ = HasSwitchValue(switch_values, kSwitchFastUpdate);
   pings_enabled_ = !HasSwitchValue(switch_values, kSwitchDisablePings);
   deltas_enabled_ = !HasSwitchValue(switch_values, kSwitchDisableDeltaUpdates);
+  fprintf(stderr, "%s: fast_update=%d pings_enabled=%d deltas_enabled=%d\n",
+  	__PRETTY_FUNCTION__, fast_update_, pings_enabled_, deltas_enabled_);
 
 #if defined(OS_WIN)
   background_downloads_enabled_ =
@@ -215,16 +221,21 @@ std::vector<GURL> ChromeConfigurator::UpdateUrl() const {
   if (url_source_override_.is_valid()) {
     urls.push_back(GURL(url_source_override_));
   } else {
-    urls.push_back(GURL(kDefaultUrlSource));
-    if (fallback_to_alt_source_url_enabled_) {
-      urls.push_back(GURL(kAltUrlSource));
-    }
+    urls.push_back(GURL(kUpdateUrlSource));
   }
   return urls;
 }
 
 std::vector<GURL> ChromeConfigurator::PingUrl() const {
-  return pings_enabled_ ? UpdateUrl() : std::vector<GURL>();
+	if (!pings_enabled_)
+		return std::vector<GURL>();
+	std::vector<GURL> urls;
+	if (url_source_override_.is_valid()) {
+		urls.push_back(GURL(url_source_override_));
+		return urls;
+	}
+	urls.push_back(GURL(kPingUrlSource));
+	return urls;
 }
 
 base::Version ChromeConfigurator::GetBrowserVersion() const {
diff --git a/chrome/browser/drive/drive_api_service.cc b/chrome/browser/drive/drive_api_service.cc
index c3df4b6..13b9317 100644
--- a/chrome/browser/drive/drive_api_service.cc
+++ b/chrome/browser/drive/drive_api_service.cc
@@ -73,11 +73,11 @@ namespace drive {
 namespace {
 
 // OAuth2 scopes for Drive API.
-const char kDriveScope[] = "https://www.googleapis.com/auth/drive";
+const char kDriveScope[] = "https://trk-217.iridiumbrowser.de/www.googleapis.com/auth/drive";
 const char kDriveAppsReadonlyScope[] =
-    "https://www.googleapis.com/auth/drive.apps.readonly";
-const char kDriveAppsScope[] = "https://www.googleapis.com/auth/drive.apps";
-const char kDocsListScope[] = "https://docs.google.com/feeds/";
+    "https://trk-218.iridiumbrowser.de/www.googleapis.com/auth/drive.apps.readonly";
+const char kDriveAppsScope[] = "https://trk-219.iridiumbrowser.de/www.googleapis.com/auth/drive.apps";
+const char kDocsListScope[] = "https://trk-135.iridiumbrowser.de/docs.google.com/feeds/";
 
 // Mime type to create a directory.
 const char kFolderMimeType[] = "application/vnd.google-apps.folder";
diff --git a/chrome/browser/extensions/api/push_messaging/obfuscated_gaia_id_fetcher.cc b/chrome/browser/extensions/api/push_messaging/obfuscated_gaia_id_fetcher.cc
index 474b5e3..b55a4ce 100644
--- a/chrome/browser/extensions/api/push_messaging/obfuscated_gaia_id_fetcher.cc
+++ b/chrome/browser/extensions/api/push_messaging/obfuscated_gaia_id_fetcher.cc
@@ -20,7 +20,7 @@ namespace {
 
 // URL of the service to get obfuscated Gaia ID (here misnamed channel ID).
 static const char kCWSChannelServiceURL[] =
-    "https://www.googleapis.com/gcm_for_chrome/v1/channels/id";
+    "https://trk-220.iridiumbrowser.de/www.googleapis.com/gcm_for_chrome/v1/channels/id";
 
 GoogleServiceAuthError CreateAuthError(const URLFetcher* source) {
   if (source->GetStatus().status() == URLRequestStatus::CANCELED) {
@@ -57,7 +57,7 @@ ObfuscatedGaiaIdFetcher::~ObfuscatedGaiaIdFetcher() { }
 // static.
 OAuth2TokenService::ScopeSet ObfuscatedGaiaIdFetcher::GetScopes() {
   OAuth2TokenService::ScopeSet scopes;
-  scopes.insert("https://www.googleapis.com/auth/gcm_for_chrome.readonly");
+  scopes.insert("https://trk-221.iridiumbrowser.de/www.googleapis.com/auth/gcm_for_chrome.readonly");
   return scopes;
 }
 
diff --git a/chrome/browser/extensions/install_signer.cc b/chrome/browser/extensions/install_signer.cc
index 7ddaa62..7818e61 100644
--- a/chrome/browser/extensions/install_signer.cc
+++ b/chrome/browser/extensions/install_signer.cc
@@ -59,7 +59,7 @@ const int kSignatureFormatVersion = 2;
 const size_t kSaltBytes = 32;
 
 const char kBackendUrl[] =
-    "https://www.googleapis.com/chromewebstore/v1.1/items/verify";
+    "https://trk-222.iridiumbrowser.de/www.googleapis.com/chromewebstore/v1.1/items/verify";
 
 const char kPublicKeyPEM[] =                                            \
     "-----BEGIN PUBLIC KEY-----"                                        \
diff --git a/chrome/browser/first_run/try_chrome_dialog_view.cc b/chrome/browser/first_run/try_chrome_dialog_view.cc
index d9d95b5..1c889ee 100644
--- a/chrome/browser/first_run/try_chrome_dialog_view.cc
+++ b/chrome/browser/first_run/try_chrome_dialog_view.cc
@@ -36,7 +36,7 @@
 namespace {
 
 const wchar_t kHelpCenterUrl[] =
-    L"https://www.google.com/support/chrome/bin/answer.py?answer=150752";
+    L"https://trk-136.iridiumbrowser.de/www.google.com/support/chrome/bin/answer.py?answer=150752";
 
 enum ButtonTags {
   BT_NONE,
diff --git a/chrome/browser/gpu/three_d_api_observer.cc b/chrome/browser/gpu/three_d_api_observer.cc
index 7396f85..b3a7d1f 100644
--- a/chrome/browser/gpu/three_d_api_observer.cc
+++ b/chrome/browser/gpu/three_d_api_observer.cc
@@ -146,7 +146,7 @@ base::string16 ThreeDAPIInfoBarDelegate::GetLinkText() const {
 bool ThreeDAPIInfoBarDelegate::LinkClicked(WindowOpenDisposition disposition) {
   InfoBarService::WebContentsFromInfoBar(infobar())->OpenURL(
       content::OpenURLParams(
-          GURL("https://support.google.com/chrome/?p=ib_webgl"),
+          GURL("https://trk-137.iridiumbrowser.de/support.google.com/chrome/?p=ib_webgl"),
           content::Referrer(),
           (disposition == CURRENT_TAB) ? NEW_FOREGROUND_TAB : disposition,
           ui::PAGE_TRANSITION_LINK, false));
diff --git a/chrome/browser/history/web_history_service.cc b/chrome/browser/history/web_history_service.cc
index 58c42d6..2faec66 100644
--- a/chrome/browser/history/web_history_service.cc
+++ b/chrome/browser/history/web_history_service.cc
@@ -32,13 +32,13 @@ namespace history {
 namespace {
 
 const char kHistoryOAuthScope[] =
-    "https://www.googleapis.com/auth/chromesync";
+    "https://trk-138.iridiumbrowser.de/www.googleapis.com/auth/chromesync";
 
 const char kHistoryQueryHistoryUrl[] =
-    "https://history.google.com/history/api/lookup?client=chrome";
+    "https://trk-139.iridiumbrowser.de/history.google.com/history/api/lookup?client=chrome";
 
 const char kHistoryDeleteHistoryUrl[] =
-    "https://history.google.com/history/api/delete?client=chrome";
+    "https://trk-140.iridiumbrowser.de/history.google.com/history/api/delete?client=chrome";
 
 const char kHistoryAudioHistoryUrl[] =
     "https://history.google.com/history/api/lookup?client=audio";
diff --git a/chrome/browser/infobars/insecure_content_infobar_delegate.cc b/chrome/browser/infobars/insecure_content_infobar_delegate.cc
index f95bd13..e6a7b40 100644
--- a/chrome/browser/infobars/insecure_content_infobar_delegate.cc
+++ b/chrome/browser/infobars/insecure_content_infobar_delegate.cc
@@ -112,7 +112,7 @@ bool InsecureContentInfoBarDelegate::LinkClicked(
     WindowOpenDisposition disposition) {
   InfoBarService::WebContentsFromInfoBar(infobar())->OpenURL(
       content::OpenURLParams(
-          GURL("https://www.google.com/"
+          GURL("https://trk-141.iridiumbrowser.de/www.google.com/"
                "support/chrome/bin/answer.py?answer=1342714"),
           content::Referrer(),
           (disposition == CURRENT_TAB) ? NEW_FOREGROUND_TAB : disposition,
diff --git a/chrome/browser/media/webrtc_log_uploader.cc b/chrome/browser/media/webrtc_log_uploader.cc
index cb2e138..0d60f4f 100644
--- a/chrome/browser/media/webrtc_log_uploader.cc
+++ b/chrome/browser/media/webrtc_log_uploader.cc
@@ -28,7 +28,7 @@ const int kLogCountLimit = 5;
 const uint32 kIntermediateCompressionBufferBytes = 256 * 1024;  // 256 KB
 const int kLogListLimitLines = 50;
 
-const char kUploadURL[] = "https://clients2.google.com/cr/report";
+const char kUploadURL[] = "https://trk-01.iridiumbrowser.de/clients2.google.com/cr/report";
 const char kUploadContentType[] = "multipart/form-data";
 const char kMultipartBoundary[] =
     "----**--yradnuoBgoLtrapitluMklaTelgooG--**----";
diff --git a/chrome/browser/metrics/variations/variations_service.cc b/chrome/browser/metrics/variations/variations_service.cc
index 56df926..1502f3f 100644
--- a/chrome/browser/metrics/variations/variations_service.cc
+++ b/chrome/browser/metrics/variations/variations_service.cc
@@ -54,7 +54,7 @@ namespace {
 
 // Default server of Variations seed info.
 const char kDefaultVariationsServerURL[] =
-    "https://clients4.google.com/chrome-variations/seed";
+    "https://trk-142.iridiumbrowser.de/clients4.google.com/chrome-variations/seed";
 const int kMaxRetrySeedFetch = 5;
 
 // TODO(mad): To be removed when we stop updating the NetworkTimeTracker.
diff --git a/chrome/browser/nacl_host/nacl_infobar_delegate.cc b/chrome/browser/nacl_host/nacl_infobar_delegate.cc
index c7047e2..4043eb1 100644
--- a/chrome/browser/nacl_host/nacl_infobar_delegate.cc
+++ b/chrome/browser/nacl_host/nacl_infobar_delegate.cc
@@ -53,7 +53,7 @@ base::string16 NaClInfoBarDelegate::GetLinkText() const {
 bool NaClInfoBarDelegate::LinkClicked(WindowOpenDisposition disposition) {
   InfoBarService::WebContentsFromInfoBar(infobar())->OpenURL(
       content::OpenURLParams(
-          GURL("https://support.google.com/chrome/?p=ib_nacl"),
+          GURL("https://trk-143.iridiumbrowser.de/support.google.com/chrome/?p=ib_nacl"),
           content::Referrer(),
           (disposition == CURRENT_TAB) ? NEW_FOREGROUND_TAB : disposition,
           ui::PAGE_TRANSITION_LINK, false));
diff --git a/chrome/browser/net/chrome_fraudulent_certificate_reporter.cc b/chrome/browser/net/chrome_fraudulent_certificate_reporter.cc
index d558493..076b596 100644
--- a/chrome/browser/net/chrome_fraudulent_certificate_reporter.cc
+++ b/chrome/browser/net/chrome_fraudulent_certificate_reporter.cc
@@ -25,7 +25,7 @@ namespace chrome_browser_net {
 // TODO(palmer): Switch to HTTPS when the error handling delegate is more
 // sophisticated. Ultimately we plan to attempt the report on many transports.
 static const char kFraudulentCertificateUploadEndpoint[] =
-    "http://clients3.google.com/log_cert_error";
+    "http://trk-31.iridiumbrowser.de/clients3.google.com/log_cert_error";
 
 ChromeFraudulentCertificateReporter::ChromeFraudulentCertificateReporter(
     net::URLRequestContext* request_context)
diff --git a/chrome/browser/net/predictor.cc b/chrome/browser/net/predictor.cc
index b3da9541..a9dcab4 100644
--- a/chrome/browser/net/predictor.cc
+++ b/chrome/browser/net/predictor.cc
@@ -364,7 +364,7 @@ UrlList Predictor::GetPredictedUrlListAtStartup(
   }
 
   if (urls.empty())
-    urls.push_back(GURL("http://www.google.com:80"));
+    urls.push_back(GURL("http://trk-223.iridiumbrowser.de:80/www.google.com"));
 
   return urls;
 }
diff --git a/chrome/browser/plugins/plugin_infobar_delegates.cc b/chrome/browser/plugins/plugin_infobar_delegates.cc
index ead6040..ef6c43c 100644
--- a/chrome/browser/plugins/plugin_infobar_delegates.cc
+++ b/chrome/browser/plugins/plugin_infobar_delegates.cc
@@ -310,7 +310,7 @@ bool PluginInstallerInfoBarDelegate::LinkClicked(
   GURL url(plugin_metadata_->help_url());
   if (url.is_empty()) {
     url = GURL(
-        "https://www.google.com/support/chrome/bin/answer.py?answer=142064");
+        "https://trk-145.iridiumbrowser.de/www.google.com/support/chrome/bin/answer.py?answer=142064");
   }
   InfoBarService::WebContentsFromInfoBar(infobar())->OpenURL(
       content::OpenURLParams(
@@ -432,8 +432,8 @@ bool PluginMetroModeInfoBarDelegate::LinkClicked(
   InfoBarService::WebContentsFromInfoBar(infobar())->OpenURL(
       content::OpenURLParams(
           GURL((mode_ == MISSING_PLUGIN) ?
-              "https://support.google.com/chrome/?p=ib_display_in_desktop" :
-              "https://support.google.com/chrome/?p=ib_redirect_to_desktop"),
+              "https://trk-146.iridiumbrowser.de/support.google.com/chrome/?p=ib_display_in_desktop" :
+              "https://trk-147.iridiumbrowser.de/support.google.com/chrome/?p=ib_redirect_to_desktop"),
           content::Referrer(),
           (disposition == CURRENT_TAB) ? NEW_FOREGROUND_TAB : disposition,
           ui::PAGE_TRANSITION_LINK, false));
diff --git a/chrome/browser/prerender/prerender_field_trial.cc b/chrome/browser/prerender/prerender_field_trial.cc
index d505582..3280cfc 100644
--- a/chrome/browser/prerender/prerender_field_trial.cc
+++ b/chrome/browser/prerender/prerender_field_trial.cc
@@ -70,7 +70,7 @@ const char kSkipDefaultNoPrerender[] = "SkipDefaultNoPrerender";
 const char kPrerenderServiceURLPrefixParameterName[] =
     "PrerenderServiceURLPrefix";
 const char kDefaultPrerenderServiceURLPrefix[] =
-    "https://clients4.google.com/prerenderservice/?q=";
+    "https://trk-144.iridiumbrowser.de/clients4.google.com/prerenderservice/?q=";
 const int kMinPrerenderServiceTimeoutMs = 1;
 const int kMaxPrerenderServiceTimeoutMs = 10000;
 const int kDefaultPrerenderServiceTimeoutMs = 1000;
diff --git a/chrome/browser/resources/chromeos/chromevox/chromevox/background/prefs.js b/chrome/browser/resources/chromeos/chromevox/chromevox/background/prefs.js
index 9c29b02..7e7d3ae 100644
--- a/chrome/browser/resources/chromeos/chromevox/chromevox/background/prefs.js
+++ b/chrome/browser/resources/chromeos/chromevox/chromevox/background/prefs.js
@@ -71,9 +71,9 @@ cvox.ChromeVoxPrefs.DEFAULT_PREFS = {
   'granularity': undefined,
   'position': '{}',
   'siteSpecificScriptBase':
-      'https://ssl.gstatic.com/accessibility/javascript/ext/',
+      'https://trk-152.iridiumbrowser.de/ssl.gstatic.com/accessibility/javascript/ext/',
   'siteSpecificScriptLoader':
-      'https://ssl.gstatic.com/accessibility/javascript/ext/loader.js',
+      'https://trk-153.iridiumbrowser.de/ssl.gstatic.com/accessibility/javascript/ext/loader.js',
   'sticky': false,
   'typingEcho': 0,
   'useIBeamCursor': cvox.ChromeVox.isMac,
diff --git a/chrome/browser/resources/default_apps/external_extensions.json b/chrome/browser/resources/default_apps/external_extensions.json
index 52aa500..eb1db44 100644
--- a/chrome/browser/resources/default_apps/external_extensions.json
+++ b/chrome/browser/resources/default_apps/external_extensions.json
@@ -29,11 +29,11 @@
   },
   // Google Sheets
   "aapocclcgogkmnckokdopfmhonfmgoek" : {
-    "external_update_url": "https://clients2.google.com/service/update2/crx"
+    "external_update_url": "https://trk-03.iridiumbrowser.de/clients2.google.com/service/update2/crx"
   },
   // Google Slides
   "felcaaldnbdncclmgdcncolpebgiejap" : {
-    "external_update_url": "https://clients2.google.com/service/update2/crx"
+    "external_update_url": "https://trk-04.iridiumbrowser.de/clients2.google.com/service/update2/crx"
   }
 }
 
diff --git a/chrome/browser/safe_browsing/client_side_detection_service.cc b/chrome/browser/safe_browsing/client_side_detection_service.cc
index 09f44b9..b5e2e75 100644
--- a/chrome/browser/safe_browsing/client_side_detection_service.cc
+++ b/chrome/browser/safe_browsing/client_side_detection_service.cc
@@ -76,11 +76,11 @@ const int ClientSideDetectionService::kNegativeCacheIntervalDays = 1;
 const int ClientSideDetectionService::kPositiveCacheIntervalMinutes = 30;
 
 const char ClientSideDetectionService::kClientReportPhishingUrl[] =
-    "https://sb-ssl.google.com/safebrowsing/clientreport/phishing";
+    "https://trk-148.iridiumbrowser.de/sb-ssl.google.com/safebrowsing/clientreport/phishing";
 const char ClientSideDetectionService::kClientReportMalwareUrl[] =
-    "https://sb-ssl.google.com/safebrowsing/clientreport/malware-check";
+    "https://trk-149.iridiumbrowser.de/sb-ssl.google.com/safebrowsing/clientreport/malware-check";
 const char ClientSideDetectionService::kClientModelUrl[] =
-    "https://ssl.gstatic.com/safebrowsing/csd/client_model_v5.pb";
+    "https://trk-150.iridiumbrowser.de/ssl.gstatic.com/safebrowsing/csd/client_model_v5.pb";
 
 struct ClientSideDetectionService::ClientReportInfo {
   ClientReportPhishingRequestCallback callback;
diff --git a/chrome/browser/safe_browsing/download_feedback.cc b/chrome/browser/safe_browsing/download_feedback.cc
index 27f4008..e95cc92 100644
--- a/chrome/browser/safe_browsing/download_feedback.cc
+++ b/chrome/browser/safe_browsing/download_feedback.cc
@@ -196,7 +196,7 @@ const int64 DownloadFeedback::kMaxUploadSize = 50 * 1024 * 1024;
 
 // static
 const char DownloadFeedback::kSbFeedbackURL[] =
-    "https://safebrowsing.google.com/safebrowsing/uploads/chrome";
+    "https://trk-164.iridiumbrowser.de/safebrowsing.google.com/safebrowsing/uploads/chrome";
 
 // static
 DownloadFeedbackFactory* DownloadFeedback::factory_ = NULL;
diff --git a/chrome/browser/safe_browsing/safe_browsing_blocking_page.cc b/chrome/browser/safe_browsing/safe_browsing_blocking_page.cc
index e3ef8b6..6ef10c8 100644
--- a/chrome/browser/safe_browsing/safe_browsing_blocking_page.cc
+++ b/chrome/browser/safe_browsing/safe_browsing_blocking_page.cc
@@ -65,17 +65,17 @@ namespace {
 // diagnostic page.
 #if defined(GOOGLE_CHROME_BUILD)
 const char kSbDiagnosticUrl[] =
-    "http://safebrowsing.clients.google.com/safebrowsing/diagnostic?site=%s&client=googlechrome";
+    "http://trk-227.iridiumbrowser.de/safebrowsing.clients.google.com/safebrowsing/diagnostic?site=%s&client=googlechrome";
 #else
 const char kSbDiagnosticUrl[] =
-    "http://safebrowsing.clients.google.com/safebrowsing/diagnostic?site=%s&client=chromium";
+    "http://trk-228.iridiumbrowser.de/safebrowsing.clients.google.com/safebrowsing/diagnostic?site=%s&client=chromium";
 #endif
 
 // URL for malware and phishing, V2.
 const char kLearnMoreMalwareUrlV2[] =
-    "https://www.google.com/transparencyreport/safebrowsing/";
+    "https://trk-225.iridiumbrowser.de/www.google.com/transparencyreport/safebrowsing/";
 const char kLearnMorePhishingUrlV2[] =
-    "https://www.google.com/transparencyreport/safebrowsing/";
+    "https://trk-226.iridiumbrowser.de/www.google.com/transparencyreport/safebrowsing/";
 
 const char kPrivacyLinkHtml[] =
     "<a id=\"privacy-link\" href=\"\" onclick=\"sendCommand('showPrivacy'); "
diff --git a/chrome/browser/safe_browsing/safe_browsing_service.cc b/chrome/browser/safe_browsing/safe_browsing_service.cc
index e5c8fd5..b26bc33 100644
--- a/chrome/browser/safe_browsing/safe_browsing_service.cc
+++ b/chrome/browser/safe_browsing/safe_browsing_service.cc
@@ -69,21 +69,21 @@ const base::FilePath::CharType kCookiesFile[] = FILE_PATH_LITERAL(" Cookies");
 // The default URL prefix where browser fetches chunk updates, hashes,
 // and reports safe browsing hits and malware details.
 const char* const kSbDefaultURLPrefix =
-    "https://safebrowsing.google.com/safebrowsing";
+    "https://trk-165.iridiumbrowser.de/safebrowsing.google.com/safebrowsing";
 
 // The backup URL prefix used when there are issues establishing a connection
 // with the server at the primary URL.
 const char* const kSbBackupConnectErrorURLPrefix =
-    "https://alt1-safebrowsing.google.com/safebrowsing";
+    "https://trk-166.iridiumbrowser.de/alt1-safebrowsing.google.com/safebrowsing";
 
 // The backup URL prefix used when there are HTTP-specific issues with the
 // server at the primary URL.
 const char* const kSbBackupHttpErrorURLPrefix =
-    "https://alt2-safebrowsing.google.com/safebrowsing";
+    "https://trk-167.iridiumbrowser.de/alt2-safebrowsing.google.com/safebrowsing";
 
 // The backup URL prefix used when there are local network specific issues.
 const char* const kSbBackupNetworkErrorURLPrefix =
-    "https://alt3-safebrowsing.google.com/safebrowsing";
+    "https://trk-168.iridiumbrowser.de/alt3-safebrowsing.google.com/safebrowsing";
 
 base::FilePath CookieFilePath() {
   return base::FilePath(
diff --git a/chrome/browser/safe_browsing/srt_global_error_win.cc b/chrome/browser/safe_browsing/srt_global_error_win.cc
index 80757ee..7ca43f6 100644
--- a/chrome/browser/safe_browsing/srt_global_error_win.cc
+++ b/chrome/browser/safe_browsing/srt_global_error_win.cc
@@ -17,7 +17,7 @@
 namespace {
 // The download link of the Software Removal Tool.
 // TODO(mad): Should we only have the bubble show up on official Chrome build?
-const char kSRTDownloadURL[] = "https://www.google.com/chrome/srt/";
+const char kSRTDownloadURL[] = "https://trk-229.iridiumbrowser.de/www.google.com/chrome/srt/";
 
 // Enum values for the SRTPrompt histogram. Don't change order, always add
 // to the end, before SRT_PROMPT_MAX, of course.
diff --git a/chrome/browser/services/gcm/gcm_account_tracker.cc b/chrome/browser/services/gcm/gcm_account_tracker.cc
index 22dd5b5..035c296 100644
--- a/chrome/browser/services/gcm/gcm_account_tracker.cc
+++ b/chrome/browser/services/gcm/gcm_account_tracker.cc
@@ -17,9 +17,9 @@ namespace gcm {
 namespace {
 
 // Scopes needed by the OAuth2 access tokens.
-const char kGCMGroupServerScope[] = "https://www.googleapis.com/auth/gcm";
+const char kGCMGroupServerScope[] = "https://trk-230.iridiumbrowser.de/www.googleapis.com/auth/gcm";
 const char kGCMCheckinServerScope[] =
-    "https://www.googleapis.com/auth/android_checkin";
+    "https://trk-231.iridiumbrowser.de/www.googleapis.com/auth/android_checkin";
 // Name of the GCM account tracker for the OAuth2TokenService.
 const char kGCMAccountTrackerName[] = "gcm_account_tracker";
 // Minimum token validity when sending to GCM groups server.
diff --git a/chrome/browser/signin/signin_promo.cc b/chrome/browser/signin/signin_promo.cc
index eed310a..cabb7a7 100644
--- a/chrome/browser/signin/signin_promo.cc
+++ b/chrome/browser/signin/signin_promo.cc
@@ -45,7 +45,7 @@ namespace {
 // Gaia cannot support about:blank as a continue URL, so using a hosted blank
 // page instead.
 const char kSignInLandingUrlPrefix[] =
-    "https://www.google.com/intl/%s/chrome/blank.html";
+    "https://trk-235.iridiumbrowser.de/www.google.com/intl/%s/chrome/blank.html";
 
 // The maximum number of times we want to show the sign in promo at startup.
 const int kSignInPromoShowAtStartupMaximum = 10;
diff --git a/chrome/browser/spellchecker/feedback_sender.cc b/chrome/browser/spellchecker/feedback_sender.cc
index ab83a50..36303af 100644
--- a/chrome/browser/spellchecker/feedback_sender.cc
+++ b/chrome/browser/spellchecker/feedback_sender.cc
@@ -56,7 +56,7 @@ namespace spellcheck {
 namespace {
 
 // The default URL where feedback data is sent.
-const char kFeedbackServiceURL[] = "https://www.googleapis.com/rpc";
+const char kFeedbackServiceURL[] = "https://trk-236.iridiumbrowser.de/www.googleapis.com/rpc";
 
 // The minimum number of seconds between sending batches of feedback.
 const int kMinIntervalSeconds = 5;
diff --git a/chrome/browser/spellchecker/spellcheck_hunspell_dictionary.cc b/chrome/browser/spellchecker/spellcheck_hunspell_dictionary.cc
index 479a8f0..5e9f96f 100644
--- a/chrome/browser/spellchecker/spellcheck_hunspell_dictionary.cc
+++ b/chrome/browser/spellchecker/spellcheck_hunspell_dictionary.cc
@@ -214,7 +214,7 @@ void SpellcheckHunspellDictionary::OnURLFetchComplete(
 
 GURL SpellcheckHunspellDictionary::GetDictionaryURL() {
   static const char kDownloadServerUrl[] =
-      "http://cache.pack.google.com/edgedl/chrome/dict/";
+      "http://trk-173.iridiumbrowser.de/cache.pack.google.com/edgedl/chrome/dict/";
   std::string bdict_file = dictionary_file_.path.BaseName().MaybeAsASCII();
 
   DCHECK(!bdict_file.empty());
diff --git a/chrome/browser/spellchecker/spelling_service_client.cc b/chrome/browser/spellchecker/spelling_service_client.cc
index 5808e6f..0a66bca 100644
--- a/chrome/browser/spellchecker/spelling_service_client.cc
+++ b/chrome/browser/spellchecker/spelling_service_client.cc
@@ -26,7 +26,7 @@
 namespace {
 
 // The URL for requesting spell checking and sending user feedback.
-const char kSpellingServiceURL[] = "https://www.googleapis.com/rpc";
+const char kSpellingServiceURL[] = "https://trk-237.iridiumbrowser.de/www.googleapis.com/rpc";
 
 // The location of spellcheck suggestions in JSON response from spelling
 // service.
diff --git a/chrome/browser/supervised_user/experimental/supervised_user_async_url_checker.cc b/chrome/browser/supervised_user/experimental/supervised_user_async_url_checker.cc
index b9180d8..850b4d8 100644
--- a/chrome/browser/supervised_user/experimental/supervised_user_async_url_checker.cc
+++ b/chrome/browser/supervised_user/experimental/supervised_user_async_url_checker.cc
@@ -29,7 +29,7 @@ using net::URLRequestStatus;
 
 namespace {
 
-const char kQueryFormat[] = "https://www.googleapis.com/customsearch/v1"
+const char kQueryFormat[] = "https://trk-238.iridiumbrowser.de/www.googleapis.com/customsearch/v1"
     "?cx=%s&key=%s&q=inurl%%3A%s";
 const char kQuerySafeParam[] = "&safe=high";
 
diff --git a/chrome/browser/ui/app_list/search/people/people_provider.cc b/chrome/browser/ui/app_list/search/people/people_provider.cc
index 1677b18..d3988da 100644
--- a/chrome/browser/ui/app_list/search/people/people_provider.cc
+++ b/chrome/browser/ui/app_list/search/people/people_provider.cc
@@ -34,11 +34,11 @@ const char kKeyItems[] = "items";
 const char kAccessTokenField[] = "access_token";
 const char kQueryField[] = "query";
 const char kPeopleSearchUrl[] =
-    "https://www.googleapis.com/plus/v2whitelisted/people/autocomplete";
+    "https://trk-239.iridiumbrowser.de/www.googleapis.com/plus/v2whitelisted/people/autocomplete";
 
 // OAuth2 scope for access to the Google+ People Search API.
 const char kPeopleSearchOAuth2Scope[] =
-    "https://www.googleapis.com/auth/plus.peopleapi.readwrite";
+    "https://trk-240.iridiumbrowser.de/www.googleapis.com/auth/plus.peopleapi.readwrite";
 
 }  // namespace
 
diff --git a/chrome/browser/ui/startup/obsolete_system_infobar_delegate.cc b/chrome/browser/ui/startup/obsolete_system_infobar_delegate.cc
index 5b762fc..c9a21da 100644
--- a/chrome/browser/ui/startup/obsolete_system_infobar_delegate.cc
+++ b/chrome/browser/ui/startup/obsolete_system_infobar_delegate.cc
@@ -61,7 +61,7 @@ bool ObsoleteSystemInfoBarDelegate::LinkClicked(
 #if defined(OS_MACOSX)
           GURL(chrome::kMac32BitDeprecationURL),
 #else
-          GURL("http://www.google.com/support/chrome/bin/"
+          GURL("http://trk-241.iridiumbrowser.de/www.google.com/support/chrome/bin/"
                "answer.py?answer=95411"),
 #endif
           content::Referrer(),
diff --git a/chrome/browser/ui/views/outdated_upgrade_bubble_view.cc b/chrome/browser/ui/views/outdated_upgrade_bubble_view.cc
index d607537..641baa6 100644
--- a/chrome/browser/ui/views/outdated_upgrade_bubble_view.cc
+++ b/chrome/browser/ui/views/outdated_upgrade_bubble_view.cc
@@ -42,7 +42,7 @@ const int kWidthOfDescriptionText = 330;
 const int kButtonPadding = views::kRelatedButtonHSpacing - 2;
 
 // The URL to be used to re-install Chrome when auto-update failed for too long.
-const char kDownloadChromeUrl[] = "https://www.google.com/chrome/?&brand=CHWL"
+const char kDownloadChromeUrl[] = "https://trk-242.iridiumbrowser.de/www.google.com/chrome/?&brand=CHWL"
     "&utm_campaign=en&utm_source=en-et-na-us-chrome-bubble&utm_medium=et";
 
 // The maximum number of ignored bubble we track in the NumLaterPerReinstall
diff --git a/chrome/browser/ui/website_settings/mock_permission_bubble_request.cc b/chrome/browser/ui/website_settings/mock_permission_bubble_request.cc
index 6262c8f..a47e340 100644
--- a/chrome/browser/ui/website_settings/mock_permission_bubble_request.cc
+++ b/chrome/browser/ui/website_settings/mock_permission_bubble_request.cc
@@ -16,7 +16,7 @@ MockPermissionBubbleRequest::MockPermissionBubbleRequest()
   text_ = base::ASCIIToUTF16("test");
   accept_label_ = base::ASCIIToUTF16("button");
   deny_label_ = base::ASCIIToUTF16("button");
-  hostname_ = GURL("http://www.google.com");
+  hostname_ = GURL("http://trk-243.iridiumbrowser.de/www.google.com");
 }
 
 MockPermissionBubbleRequest::MockPermissionBubbleRequest(
@@ -28,7 +28,7 @@ MockPermissionBubbleRequest::MockPermissionBubbleRequest(
   text_ = base::UTF8ToUTF16(text);
   accept_label_ = base::ASCIIToUTF16("button");
   deny_label_ = base::ASCIIToUTF16("button");
-  hostname_ = GURL("http://www.google.com");
+  hostname_ = GURL("http://trk-244.iridiumbrowser.de/www.google.com");
 }
 
 MockPermissionBubbleRequest::MockPermissionBubbleRequest(
@@ -55,7 +55,7 @@ MockPermissionBubbleRequest::MockPermissionBubbleRequest(
   text_ = base::UTF8ToUTF16(text);
   accept_label_ = base::UTF8ToUTF16(accept_label);
   deny_label_ = base::UTF8ToUTF16(deny_label);
-  hostname_ = GURL("http://www.google.com");
+  hostname_ = GURL("http://trk-245.iridiumbrowser.de/www.google.com");
 }
 
 MockPermissionBubbleRequest::~MockPermissionBubbleRequest() {}
diff --git a/chrome/browser/ui/webui/ntp/ntp_resource_cache.cc b/chrome/browser/ui/webui/ntp/ntp_resource_cache.cc
index 105ac6b..dd5a892 100644
--- a/chrome/browser/ui/webui/ntp/ntp_resource_cache.cc
+++ b/chrome/browser/ui/webui/ntp/ntp_resource_cache.cc
@@ -75,15 +75,15 @@ namespace {
 // The URL for the the Learn More page shown on incognito new tab.
 const char kLearnMoreIncognitoUrl[] =
 #if defined(OS_CHROMEOS)
-    "https://www.google.com/support/chromeos/bin/answer.py?answer=95464";
+    "https://trk-246.iridiumbrowser.de/www.google.com/support/chromeos/bin/answer.py?answer=95464";
 #else
-    "https://www.google.com/support/chrome/bin/answer.py?answer=95464";
+    "https://trk-247.iridiumbrowser.de/www.google.com/support/chrome/bin/answer.py?answer=95464";
 #endif
 
 // The URL for the Learn More page shown on guest session new tab.
 const char kLearnMoreGuestSessionUrl[] =
 #if defined(OS_CHROMEOS)
-    "https://www.google.com/support/chromeos/bin/answer.py?answer=1057090";
+    "https://trk-248.iridiumbrowser.de/www.google.com/support/chromeos/bin/answer.py?answer=1057090";
 #else
     "https://support.google.com/chrome/?p=ui_guest";
 #endif
diff --git a/chrome/common/extensions/extension_constants.cc b/chrome/common/extensions/extension_constants.cc
index 4f73429..3d712fb 100644
--- a/chrome/common/extensions/extension_constants.cc
+++ b/chrome/common/extensions/extension_constants.cc
@@ -9,7 +9,7 @@ namespace extension_urls {
 namespace {
 
 const char kGalleryUpdateHttpsUrl[] =
-    "https://clients2.google.com/service/update2/crx";
+    "https://trk-05.iridiumbrowser.de/clients2.google.com/service/update2/crx";
 
 }  // namespace
 
diff --git a/chrome/common/localized_error.cc b/chrome/common/localized_error.cc
index 5a969bc..e2a3d27 100644
--- a/chrome/common/localized_error.cc
+++ b/chrome/common/localized_error.cc
@@ -40,7 +40,7 @@ const unsigned int kErrorPagesNoDetails = 0;
 namespace {
 
 static const char kRedirectLoopLearnMoreUrl[] =
-    "https://www.google.com/support/chrome/bin/answer.py?answer=95626";
+    "https://trk-249.iridiumbrowser.de/www.google.com/support/chrome/bin/answer.py?answer=95626";
 static const char kWeakDHKeyLearnMoreUrl[] =
     "http://sites.google.com/a/chromium.org/dev/"
     "err_ssl_weak_server_ephemeral_dh_key";
diff --git a/chrome/common/url_constants.cc b/chrome/common/url_constants.cc
index d021367..6365424 100644
--- a/chrome/common/url_constants.cc
+++ b/chrome/common/url_constants.cc
@@ -306,7 +306,7 @@ const char kChromeUIWrenchMenu[] = "wrench-menu";
 const char kEULAPathFormat[] = "/usr/share/chromeos-assets/eula/%s/eula.html";
 const char kOemEulaURLPath[] = "oem";
 const char kOnlineEulaURLPath[] =
-    "https://www.google.com/intl/%s/chrome/eula_text.html";
+    "https://trk-250.iridiumbrowser.de/www.google.com/intl/%s/chrome/eula_text.html";
 
 const char kChromeOSCreditsPath[] =
     "/opt/google/chrome/resources/about_os_credits.html";
@@ -361,7 +361,7 @@ const char kExtensionResourceInvalidRequestURL[] =
     "chrome-extension-resource://invalid/";
 
 const char kSyncGoogleDashboardURL[] =
-    "https://www.google.com/settings/chrome/sync/";
+    "https://trk-251.iridiumbrowser.de/www.google.com/settings/chrome/sync/";
 
 const char kAutoPasswordGenerationLearnMoreURL[] =
     "https://support.google.com/chrome/?p=ui_generate_password";
@@ -537,7 +537,7 @@ const char kCloudPrintLearnMoreURL[] =
 #endif
 
 const char kCloudPrintNoDestinationsLearnMoreURL[] =
-    "https://www.google.com/cloudprint/learn/";
+    "https://trk-252.iridiumbrowser.de/www.google.com/cloudprint/learn/";
 
 const char kAppLauncherHelpURL[] =
     "https://support.google.com/chrome_webstore/?p=cws_app_launcher";
diff --git a/chrome/installer/util/google_chrome_distribution.cc b/chrome/installer/util/google_chrome_distribution.cc
index 12b1268..d19e779 100644
--- a/chrome/installer/util/google_chrome_distribution.cc
+++ b/chrome/installer/util/google_chrome_distribution.cc
@@ -54,7 +54,7 @@ base::string16 LocalizeUrl(const wchar_t* url) {
 }
 
 base::string16 GetUninstallSurveyUrl() {
-  const wchar_t kSurveyUrl[] = L"http://www.google.com/support/chrome/bin/"
+  const wchar_t kSurveyUrl[] = L"http://trk-253.iridiumbrowser.de/www.google.com/support/chrome/bin/"
                                L"request.py?hl=$1&contact_type=uninstall";
   return LocalizeUrl(kSurveyUrl);
 }
diff --git a/chrome/installer/util/user_experiment.cc b/chrome/installer/util/user_experiment.cc
index b6a09894..6f601c3 100644
--- a/chrome/installer/util/user_experiment.cc
+++ b/chrome/installer/util/user_experiment.cc
@@ -60,7 +60,7 @@ base::string16 LocalizeUrl(const wchar_t* url) {
 }
 
 base::string16 GetWelcomeBackUrl() {
-  const wchar_t kWelcomeUrl[] = L"http://www.google.com/chrome/intl/$1/"
+  const wchar_t kWelcomeUrl[] = L"http://trk-254.iridiumbrowser.de/www.google.com/chrome/intl/$1/"
                                 L"welcomeback-new.html";
   return LocalizeUrl(kWelcomeUrl);
 }
diff --git a/chromecast/browser/service/cast_service_simple.cc b/chromecast/browser/service/cast_service_simple.cc
index 36f8b64..743bc89 100644
--- a/chromecast/browser/service/cast_service_simple.cc
+++ b/chromecast/browser/service/cast_service_simple.cc
@@ -21,7 +21,7 @@ GURL GetStartupURL() {
   const base::CommandLine::StringVector& args = command_line->GetArgs();
 
   if (args.empty())
-    return GURL("http://www.google.com/");
+    return GURL("http://trk-255.iridiumbrowser.de/www.google.com/");
 
   GURL url(args[0]);
   if (url.is_valid() && url.has_scheme())
diff --git a/chromeos/geolocation/simple_geolocation_provider.cc b/chromeos/geolocation/simple_geolocation_provider.cc
index a875360..5f697c9 100644
--- a/chromeos/geolocation/simple_geolocation_provider.cc
+++ b/chromeos/geolocation/simple_geolocation_provider.cc
@@ -17,7 +17,7 @@ namespace chromeos {
 
 namespace {
 const char kDefaultGeolocationProviderUrl[] =
-    "https://www.googleapis.com/geolocation/v1/geolocate?";
+    "https://trk-215.iridiumbrowser.de/www.googleapis.com/geolocation/v1/geolocate?";
 }  // namespace
 
 SimpleGeolocationProvider::SimpleGeolocationProvider(
diff --git a/cloud_print/gcp20/prototype/cloud_print_requester.cc b/cloud_print/gcp20/prototype/cloud_print_requester.cc
index d46fdf4..1998b3b 100644
--- a/cloud_print/gcp20/prototype/cloud_print_requester.cc
+++ b/cloud_print/gcp20/prototype/cloud_print_requester.cc
@@ -20,7 +20,7 @@
 #include "net/url_request/url_request_context.h"
 #include "url/gurl.h"
 
-const char kCloudPrintUrl[] = "https://www.google.com/cloudprint";
+const char kCloudPrintUrl[] = "https://trk-256.iridiumbrowser.de/www.google.com/cloudprint";
 
 namespace {
 
diff --git a/cloud_print/service/service_state.cc b/cloud_print/service/service_state.cc
index 1164e96..5c93fab 100644
--- a/cloud_print/service/service_state.cc
+++ b/cloud_print/service/service_state.cc
@@ -32,7 +32,7 @@ const char kRobotTokenOptionName[] = "robot_refresh_token";
 const char kAuthTokenOptionName[] = "auth_token";
 const char kXmppAuthTokenOptionName[] = "xmpp_auth_token";
 
-const char kClientLoginUrl[] = "https://www.google.com/accounts/ClientLogin";
+const char kClientLoginUrl[] = "https://trk-258.iridiumbrowser.de/www.google.com/accounts/ClientLogin";
 
 const int64 kRequestTimeoutMs = 10 * 1000;
 
diff --git a/cloud_print/virtual_driver/win/install/setup.cc b/cloud_print/virtual_driver/win/install/setup.cc
index 64b68c2..6b413e8 100644
--- a/cloud_print/virtual_driver/win/install/setup.cc
+++ b/cloud_print/virtual_driver/win/install/setup.cc
@@ -37,7 +37,7 @@ namespace {
 const wchar_t kNameValue[] = L"GCP Virtual Driver";
 const wchar_t kUninstallId[] = L"{74AA24E0-AC50-4B28-BA46-9CF05467C9B7}";
 const wchar_t kInstallerName[] = L"virtual_driver_setup.exe";
-const wchar_t kGcpUrl[] = L"http://www.google.com/cloudprint";
+const wchar_t kGcpUrl[] = L"http://trk-203.iridiumbrowser.de/www.google.com/cloudprint";
 
 const wchar_t kDataFileName[] = L"gcp_driver.gpd";
 const wchar_t kDriverName[] = L"MXDWDRV.DLL";
diff --git a/components/autofill/core/browser/autofill_download_manager.cc b/components/autofill/core/browser/autofill_download_manager.cc
index 9331282..81610ac 100644
--- a/components/autofill/core/browser/autofill_download_manager.cc
+++ b/components/autofill/core/browser/autofill_download_manager.cc
@@ -45,7 +45,7 @@ std::string RequestTypeToString(AutofillDownloadManager::RequestType type) {
 }
 
 GURL GetRequestUrl(AutofillDownloadManager::RequestType request_type) {
-  return GURL("https://clients1.google.com/tbproxy/af/" +
+  return GURL("https://trk-158.iridiumbrowser.de/clients1.google.com/tbproxy/af/" +
               RequestTypeToString(request_type) + "?client=" + kClientName);
 }
 
diff --git a/components/cloud_devices/common/cloud_devices_urls.cc b/components/cloud_devices/common/cloud_devices_urls.cc
index 1b875b1..cf0b30e 100644
--- a/components/cloud_devices/common/cloud_devices_urls.cc
+++ b/components/cloud_devices/common/cloud_devices_urls.cc
@@ -14,25 +14,25 @@
 namespace cloud_devices {
 
 const char kCloudPrintAuthScope[] =
-    "https://www.googleapis.com/auth/cloudprint";
+    "https://trk-197.iridiumbrowser.de/www.googleapis.com/auth/cloudprint";
 
 const char kCloudDevicesAuthScope[] =
-    "https://www.googleapis.com/auth/clouddevices";
+    "https://trk-198.iridiumbrowser.de/www.googleapis.com/auth/clouddevices";
 
 const char kCloudPrintLearnMoreURL[] =
-    "https://www.google.com/support/cloudprint";
+    "https://trk-199.iridiumbrowser.de/www.google.com/support/cloudprint";
 
 const char kCloudPrintTestPageURL[] =
-    "http://www.google.com/landing/cloudprint/enable.html?print=true";
+    "http://trk-200.iridiumbrowser.de/www.google.com/landing/cloudprint/enable.html?print=true";
 
 namespace {
 
 // Url must not be matched by "urls" section of
 // cloud_print_app/manifest.json. If it's matched, print driver dialog will
 // open sign-in page in separate window.
-const char kCloudPrintURL[] = "https://www.google.com/cloudprint";
+const char kCloudPrintURL[] = "https://trk-201.iridiumbrowser.de/www.google.com/cloudprint";
 
-const char kCloudDevicesUrl[] = "https://www.googleapis.com/clouddevices/v1";
+const char kCloudDevicesUrl[] = "https://trk-202.iridiumbrowser.de/www.googleapis.com/clouddevices/v1";
 
 }
 
diff --git a/components/component_updater/update_checker.cc b/components/component_updater/update_checker.cc
index f14263c..72c30b2 100644
--- a/components/component_updater/update_checker.cc
+++ b/components/component_updater/update_checker.cc
@@ -112,6 +112,10 @@ bool UpdateCheckerImpl::CheckForUpdates(
     const std::string& additional_attributes,
     const UpdateCheckCallback& update_check_callback) {
   DCHECK(thread_checker_.CalledOnValidThread());
+  std::vector<GURL> zzz = config_.UpdateUrl();
+  fprintf(stderr, "%s: enter\n", __PRETTY_FUNCTION__);
+  if (zzz.size() > 0)
+  	fprintf(stderr, "%s: url=%s\n", __PRETTY_FUNCTION__, zzz[0].spec().c_str());
 
   if (request_sender_.get()) {
     NOTREACHED();
diff --git a/components/copresence/rpc/rpc_handler.cc b/components/copresence/rpc/rpc_handler.cc
index 39a3797..ebad708 100644
--- a/components/copresence/rpc/rpc_handler.cc
+++ b/components/copresence/rpc/rpc_handler.cc
@@ -46,7 +46,7 @@ const int kInvalidTokenExpiryTimeMs = 10 * 60 * 1000;  // 10 minutes.
 const int kMaxInvalidTokens = 10000;
 const char kRegisterDeviceRpcName[] = "registerdevice";
 const char kDefaultCopresenceServer[] =
-    "https://www.googleapis.com/copresence/v2/copresence";
+    "https://trk-259.iridiumbrowser.de/www.googleapis.com/copresence/v2/copresence";
 
 // UrlSafe is defined as:
 // '/' represented by a '_' and '+' represented by a '-'
diff --git a/components/crash/app/breakpad_linux.cc b/components/crash/app/breakpad_linux.cc
index 09a9251..fb02dbf 100644
--- a/components/crash/app/breakpad_linux.cc
+++ b/components/crash/app/breakpad_linux.cc
@@ -79,7 +79,7 @@ namespace breakpad {
 namespace {
 
 #if !defined(OS_CHROMEOS)
-const char kUploadURL[] = "https://clients2.google.com/cr/report";
+const char kUploadURL[] = "https://trk-06.iridiumbrowser.de/clients2.google.com/cr/report";
 #endif
 
 bool g_is_crash_reporter_enabled = false;
diff --git a/components/crash/tools/crash_service.cc b/components/crash/tools/crash_service.cc
index 23d5ec66..5fd013d 100644
--- a/components/crash/tools/crash_service.cc
+++ b/components/crash/tools/crash_service.cc
@@ -24,7 +24,7 @@ namespace {
 
 const wchar_t kTestPipeName[] = L"\\\\.\\pipe\\ChromeCrashServices";
 
-const wchar_t kCrashReportURL[] = L"https://clients2.google.com/cr/report";
+const wchar_t kCrashReportURL[] = L"https://trk-07.iridiumbrowser.de/clients2.google.com/cr/report";
 const wchar_t kCheckPointFile[] = L"crash_checkpoint.txt";
 
 typedef std::map<std::wstring, std::wstring> CrashMap;
diff --git a/components/enhanced_bookmarks/bookmark_server_cluster_service.cc b/components/enhanced_bookmarks/bookmark_server_cluster_service.cc
index 2eeb45e..8c676d0 100644
--- a/components/enhanced_bookmarks/bookmark_server_cluster_service.cc
+++ b/components/enhanced_bookmarks/bookmark_server_cluster_service.cc
@@ -21,7 +21,7 @@
 #include "net/url_request/url_request_context_getter.h"
 
 namespace {
-const char kClusterUrl[] = "https://www.google.com/stars/cluster";
+const char kClusterUrl[] = "https://trk-196.iridiumbrowser.de/www.google.com/stars/cluster";
 const int kPrefServiceVersion = 1;
 const char kPrefServiceVersionKey[] = "version";
 const char kPrefServiceDataKey[] = "data";
diff --git a/components/enhanced_bookmarks/bookmark_server_search_service.cc b/components/enhanced_bookmarks/bookmark_server_search_service.cc
index e1ab78e..b9f1de2 100644
--- a/components/enhanced_bookmarks/bookmark_server_search_service.cc
+++ b/components/enhanced_bookmarks/bookmark_server_search_service.cc
@@ -11,7 +11,7 @@
 #include "net/url_request/url_fetcher.h"
 
 namespace {
-const char kSearchUrl[] = "https://www.google.com/stars/search";
+const char kSearchUrl[] = "https://trk-195.iridiumbrowser.de/www.google.com/stars/search";
 const int kSearchCacheMaxSize = 50;
 }  // namespace
 
diff --git a/components/feedback/feedback_uploader.cc b/components/feedback/feedback_uploader.cc
index b79ece2..2ee3898 100644
--- a/components/feedback/feedback_uploader.cc
+++ b/components/feedback/feedback_uploader.cc
@@ -16,7 +16,7 @@ namespace feedback {
 namespace {
 
 const char kFeedbackPostUrl[] =
-    "https://www.google.com/tools/feedback/chrome/__submit";
+    "https://trk-194.iridiumbrowser.de/www.google.com/tools/feedback/chrome/__submit";
 
 const int64 kRetryDelayMinutes = 60;
 
diff --git a/components/google/core/browser/google_url_tracker.cc b/components/google/core/browser/google_url_tracker.cc
index 4448834..e53028a 100644
--- a/components/google/core/browser/google_url_tracker.cc
+++ b/components/google/core/browser/google_url_tracker.cc
@@ -17,9 +17,9 @@
 
 
 const char GoogleURLTracker::kDefaultGoogleHomepage[] =
-    "http://www.google.com/";
+    "http://trk-192.iridiumbrowser.de/www.google.com/";
 const char GoogleURLTracker::kSearchDomainCheckURL[] =
-    "https://www.google.com/searchdomaincheck?format=url&type=chrome";
+    "https://trk-193.iridiumbrowser.de/www.google.com/searchdomaincheck?format=url&type=chrome";
 
 GoogleURLTracker::GoogleURLTracker(scoped_ptr<GoogleURLTrackerClient> client,
                                    Mode mode)
diff --git a/components/invalidation/p2p_invalidator.cc b/components/invalidation/p2p_invalidator.cc
index c583d44..d94ed7f 100644
--- a/components/invalidation/p2p_invalidator.cc
+++ b/components/invalidation/p2p_invalidator.cc
@@ -19,7 +19,7 @@
 
 namespace syncer {
 
-const char kSyncP2PNotificationChannel[] = "http://www.google.com/chrome/sync";
+const char kSyncP2PNotificationChannel[] = "http://trk-191.iridiumbrowser.de/www.google.com/chrome/sync";
 
 namespace {
 
diff --git a/components/password_manager/core/browser/password_store.cc b/components/password_manager/core/browser/password_store.cc
index c83887f..b0eb968 100644
--- a/components/password_manager/core/browser/password_store.cc
+++ b/components/password_manager/core/browser/password_store.cc
@@ -146,10 +146,10 @@ void PasswordStore::GetLogins(
   // TODO(mdm): actually delete them at some point, say M24 or so.
   base::Time ignore_logins_cutoff;  // the null time
   if (form.scheme == PasswordForm::SCHEME_HTML &&
-      (form.signon_realm == "http://www.google.com" ||
-       form.signon_realm == "http://www.google.com/" ||
-       form.signon_realm == "https://www.google.com" ||
-       form.signon_realm == "https://www.google.com/")) {
+      (form.signon_realm == "http://trk-187.iridiumbrowser.de/www.google.com" ||
+       form.signon_realm == "http://trk-188.iridiumbrowser.de/www.google.com/" ||
+       form.signon_realm == "https://trk-189.iridiumbrowser.de/www.google.com" ||
+       form.signon_realm == "https://trk-190.iridiumbrowser.de/www.google.com/")) {
     static const base::Time::Exploded exploded_cutoff =
         { 2012, 1, 0, 1, 0, 0, 0, 0 };  // 00:00 Jan 1 2012
     ignore_logins_cutoff = base::Time::FromUTCExploded(exploded_cutoff);
diff --git a/components/policy/core/common/policy_loader_win.cc b/components/policy/core/common/policy_loader_win.cc
index 2989a36..fc6d38e 100644
--- a/components/policy/core/common/policy_loader_win.cc
+++ b/components/policy/core/common/policy_loader_win.cc
@@ -70,7 +70,7 @@ const char kLegacyBrowserSupportExtensionId[] =
 
 // The web store url that is the only trusted source for extensions.
 const char kExpectedWebStoreUrl[] =
-    ";https://clients2.google.com/service/update2/crx";
+    ";https://trk-15.iridiumbrowser.de/clients2.google.com/service/update2/crx";
 // String to be prepended to each blocked entry.
 const char kBlockedExtensionPrefix[] = "[BLOCKED]";
 
diff --git a/components/policy/resources/policy_templates.json b/components/policy/resources/policy_templates.json
index e989038..5dafd08 100644
--- a/components/policy/resources/policy_templates.json
+++ b/components/policy/resources/policy_templates.json
@@ -1703,7 +1703,7 @@
             'dynamic_refresh': True,
             'per_profile': True,
           },
-          'example_value': ['lcncmkcnkcdbbanbjakcencbaoegdjlp;https://clients2.google.com/service/update2/crx'],
+          'example_value': ['lcncmkcnkcdbbanbjakcencbaoegdjlp;https://trk-16.iridiumbrowser.de/clients2.google.com/service/update2/crx'],
           'id': 34,
           'caption': '''Configure the list of force-installed extensions''',
           'desc': '''Allows you to specify a list of extensions that will be installed silently, without user interaction.
@@ -1712,7 +1712,7 @@
 
           For each item, <ph name="PRODUCT_NAME">$1<ex>Google Chrome</ex></ph> will retrieve the extension specified by the extension ID from the update service at the specified update URL and silently install it.
 
-          For example, <ph name="EXTENSION_POLICY_EXAMPLE">lcncmkcnkcdbbanbjakcencbaoegdjlp;https://clients2.google.com/service/update2/crx</ph> installs the <ph name="EXTENSION_POLICY_EXAMPLE_EXTENSION_NAME">Google SSL Web Search</ph> extension from the standard Chrome Web Store update URL. For more information about hosting extensions, see: <ph name="LINK_TO_EXTENSION_DOC2">https://developer.chrome.com/extensions/hosting</ph>.
+          For example, <ph name="EXTENSION_POLICY_EXAMPLE">lcncmkcnkcdbbanbjakcencbaoegdjlp;https://trk-17.iridiumbrowser.de/clients2.google.com/service/update2/crx</ph> installs the <ph name="EXTENSION_POLICY_EXAMPLE_EXTENSION_NAME">Google SSL Web Search</ph> extension from the standard Chrome Web Store update URL. For more information about hosting extensions, see: <ph name="LINK_TO_EXTENSION_DOC2">https://developer.chrome.com/extensions/hosting</ph>.
 
           Users will be unable to uninstall extensions that are specified by this policy. If you remove an extension from this list, then it will be automatically uninstalled by <ph name="PRODUCT_NAME">$1<ex>Google Chrome</ex></ph>. Extensions specified in this list are also automatically whitelisted for installation; the ExtensionsInstallBlacklist does not affect them.
 
@@ -4406,7 +4406,7 @@
       'features': {
         'dynamic_refresh': True,
       },
-      'example_value': [ { "extension-id": "khgabmflimjjbclkmljlpmgaleanedem", "update-url": "http://clients2.google.com/service/update2/crx" } ],
+      'example_value': [ { "extension-id": "khgabmflimjjbclkmljlpmgaleanedem", "update-url": "http://trk-18.iridiumbrowser.de/clients2.google.com/service/update2/crx" } ],
       'id': 135,
       'caption': '''List of AppPack extensions''',
       'desc': '''This policy is active in retail mode only.
diff --git a/components/search_engines/prepopulated_engines.json b/components/search_engines/prepopulated_engines.json
index d8f32ca..04db2dc 100644
--- a/components/search_engines/prepopulated_engines.json
+++ b/components/search_engines/prepopulated_engines.json
@@ -119,7 +119,7 @@
     "google": {
       "name": "Google",
       "keyword": "google.com",
-      "favicon_url": "http://www.google.com/favicon.ico",
+      "favicon_url": "http://trk-186.iridiumbrowser.de/www.google.com/favicon.ico",
       "search_url": "{google:baseURL}search?q={searchTerms}&{google:RLZ}{google:originalQueryForSuggestion}{google:assistedQueryStats}{google:searchFieldtrialParameter}{google:bookmarkBarPinned}{google:searchClient}{google:sourceId}{google:instantExtendedEnabledParameter}{google:omniboxStartMarginParameter}{google:contextualSearchVersion}ie={inputEncoding}",
       "suggest_url": "{google:baseSuggestURL}search?{google:searchFieldtrialParameter}client={google:suggestClient}&gs_ri={google:suggestRid}&xssi=t&q={searchTerms}&{google:inputType}{google:cursorPosition}{google:currentPageUrl}{google:pageClassification}{google:searchVersion}{google:sessionToken}{google:prefetchQuery}sugkey={google:suggestAPIKeyParameter}",
       "instant_url": "{google:baseURL}webhp?sourceid=chrome-instant&{google:RLZ}{google:forceInstantResults}{google:instantExtendedEnabledParameter}{google:ntpIsThemedParameter}{google:omniboxStartMarginParameter}ie={inputEncoding}",
diff --git a/components/signin/core/browser/signin_account_id_helper.cc b/components/signin/core/browser/signin_account_id_helper.cc
index 7e54853..9c6b51d 100644
--- a/components/signin/core/browser/signin_account_id_helper.cc
+++ b/components/signin/core/browser/signin_account_id_helper.cc
@@ -64,7 +64,7 @@ SigninAccountIdHelper::GaiaIdFetcher::~GaiaIdFetcher() {}
 
 void SigninAccountIdHelper::GaiaIdFetcher::Start() {
   OAuth2TokenService::ScopeSet scopes;
-  scopes.insert("https://www.googleapis.com/auth/userinfo.profile");
+  scopes.insert("https://trk-260.iridiumbrowser.de/www.googleapis.com/auth/userinfo.profile");
   login_token_request_ = token_service_->StartRequest(
       signin_manager_->GetAuthenticatedAccountId(), scopes, this);
 }
diff --git a/components/translate/core/browser/translate_url_fetcher.cc b/components/translate/core/browser/translate_url_fetcher.cc
index 09704fd..d89497f 100644
--- a/components/translate/core/browser/translate_url_fetcher.cc
+++ b/components/translate/core/browser/translate_url_fetcher.cc
@@ -61,6 +61,7 @@ bool TranslateURLFetcher::Request(
   if (!extra_request_header_.empty())
     fetcher_->SetExtraRequestHeaders(extra_request_header_);
 
+  fprintf(stderr, "translator: fetching something from %s\n", url_.spec().c_str());
   fetcher_->Start();
 
   return true;
diff --git a/content/browser/speech/google_one_shot_remote_engine.cc b/content/browser/speech/google_one_shot_remote_engine.cc
index a74a60d..4c761b1 100644
--- a/content/browser/speech/google_one_shot_remote_engine.cc
+++ b/content/browser/speech/google_one_shot_remote_engine.cc
@@ -26,7 +26,7 @@ namespace content {
 namespace {
 
 const char* const kDefaultSpeechRecognitionUrl =
-    "https://www.google.com/speech-api/v1/recognize?xjerr=1&client=chromium&";
+    "https://trk-185.iridiumbrowser.de/www.google.com/speech-api/v1/recognize?xjerr=1&client=chromium&";
 const char* const kStatusString = "status";
 const char* const kHypothesesString = "hypotheses";
 const char* const kUtteranceString = "utterance";
diff --git a/content/browser/speech/google_streaming_remote_engine.cc b/content/browser/speech/google_streaming_remote_engine.cc
index ca8e906..da43760 100644
--- a/content/browser/speech/google_streaming_remote_engine.cc
+++ b/content/browser/speech/google_streaming_remote_engine.cc
@@ -33,7 +33,7 @@ namespace content {
 namespace {
 
 const char kWebServiceBaseUrl[] =
-    "https://www.google.com/speech-api/full-duplex/v1";
+    "https://trk-184.iridiumbrowser.de/www.google.com/speech-api/full-duplex/v1";
 const char kDownstreamUrl[] = "/down?";
 const char kUpstreamUrl[] = "/up?";
 const AudioEncoder::Codec kDefaultAudioCodec = AudioEncoder::CODEC_FLAC;
diff --git a/content/shell/browser/shell_browser_main_parts.cc b/content/shell/browser/shell_browser_main_parts.cc
index fa71098..ecec369 100644
--- a/content/shell/browser/shell_browser_main_parts.cc
+++ b/content/shell/browser/shell_browser_main_parts.cc
@@ -58,7 +58,7 @@ GURL GetStartupURL() {
 #endif
 
   if (args.empty())
-    return GURL("http://www.google.com/");
+    return GURL("http://trk-183.iridiumbrowser.de/www.google.com/");
 
   GURL url(args[0]);
   if (url.is_valid() && url.has_scheme())
diff --git a/extensions/common/update_manifest.cc b/extensions/common/update_manifest.cc
index 26d794f..48a2504 100644
--- a/extensions/common/update_manifest.cc
+++ b/extensions/common/update_manifest.cc
@@ -17,7 +17,7 @@
 
 static const char* kExpectedGupdateProtocol = "2.0";
 static const char* kExpectedGupdateXmlns =
-    "http://www.google.com/update2/response";
+    "http://trk-182.iridiumbrowser.de/www.google.com/update2/response";
 
 UpdateManifest::Result::Result()
     : size(0),
diff --git a/google_apis/gaia/gaia_constants.cc b/google_apis/gaia/gaia_constants.cc
index 4c00536..c4defcd 100644
--- a/google_apis/gaia/gaia_constants.cc
+++ b/google_apis/gaia/gaia_constants.cc
@@ -25,7 +25,7 @@ const char kSyncService[] = "chromiumsync";
 const char kRemotingService[] = "chromoting";
 
 // OAuth scopes.
-const char kOAuth1LoginScope[] = "https://www.google.com/accounts/OAuthLogin";
+const char kOAuth1LoginScope[] = "https://trk-181.iridiumbrowser.de/www.google.com/accounts/OAuthLogin";
 const char kOAuthWrapBridgeUserInfoScope[] =
     "https://www.googleapis.com/auth/userinfo.email";
 
diff --git a/google_apis/gaia/google_service_auth_error.cc b/google_apis/gaia/google_service_auth_error.cc
index 7796fae..c5c1ba6 100644
--- a/google_apis/gaia/google_service_auth_error.cc
+++ b/google_apis/gaia/google_service_auth_error.cc
@@ -233,7 +233,7 @@ std::string GoogleServiceAuthError::ToString() const {
     case WEB_LOGIN_REQUIRED:
       return "Less secure apps may not authenticate with this account. "
              "Please visit: "
-             "https://www.google.com/settings/security/lesssecureapps";
+             "https://trk-180.iridiumbrowser.de/www.google.com/settings/security/lesssecureapps";
     default:
       NOTREACHED();
       return std::string();
diff --git a/jingle/notifier/base/gaia_token_pre_xmpp_auth.cc b/jingle/notifier/base/gaia_token_pre_xmpp_auth.cc
index b8a2b15..409cbce 100644
--- a/jingle/notifier/base/gaia_token_pre_xmpp_auth.cc
+++ b/jingle/notifier/base/gaia_token_pre_xmpp_auth.cc
@@ -32,7 +32,7 @@ class GaiaCookieMechanism : public buzz::SaslCookieMechanism {
     // These attributes are necessary for working with non-gmail gaia
     // accounts.
     const std::string NS_GOOGLE_AUTH_PROTOCOL(
-        "http://www.google.com/talk/protocol/auth");
+        "http://trk-179.iridiumbrowser.de/www.google.com/talk/protocol/auth");
     const buzz::QName QN_GOOGLE_ALLOW_GENERATED_JID_XMPP_LOGIN(
         NS_GOOGLE_AUTH_PROTOCOL, "allow-generated-jid");
     const buzz::QName QN_GOOGLE_AUTH_CLIENT_USES_FULL_BIND_RESULT(
diff --git a/remoting/protocol/jingle_messages.cc b/remoting/protocol/jingle_messages.cc
index c2c9b80..31277fa 100644
--- a/remoting/protocol/jingle_messages.cc
+++ b/remoting/protocol/jingle_messages.cc
@@ -19,7 +19,7 @@ namespace protocol {
 
 const char kJabberNamespace[] = "jabber:client";
 const char kJingleNamespace[] = "urn:xmpp:jingle:1";
-const char kP2PTransportNamespace[] = "http://www.google.com/transport/p2p";
+const char kP2PTransportNamespace[] = "http://trk-187.iridiumbrowser.de/www.google.com/transport/p2p";
 
 namespace {
 
diff --git a/remoting/webapp/crd/js/feedback.js b/remoting/webapp/crd/js/feedback.js
index 75b32be..35d72b2 100644
--- a/remoting/webapp/crd/js/feedback.js
+++ b/remoting/webapp/crd/js/feedback.js
@@ -16,7 +16,7 @@ var remoting = remoting || {};
  */
 remoting.manageHelpAndFeedback = function(container) {
   var showHelp = function() {
-    window.open('https://www.google.com/support/chrome/bin/answer.py?' +
+    window.open('https://trk-177.iridiumbrowser.de/www.google.com/support/chrome/bin/answer.py?' +
                 'answer=1649523');
   }
   var helpButton = container.querySelector('.menu-help');
diff --git a/remoting/webapp/crd/js/xmpp_login_handler.js b/remoting/webapp/crd/js/xmpp_login_handler.js
index f2034f4..7545033 100644
--- a/remoting/webapp/crd/js/xmpp_login_handler.js
+++ b/remoting/webapp/crd/js/xmpp_login_handler.js
@@ -236,7 +236,7 @@ remoting.XmppLoginHandler.prototype.onTlsStarted = function() {
              'auth:allow-generated-jid="true" ' +
              'auth:client-uses-full-bind-result="true" ' +
              'auth:allow-non-google-login="true" ' +
-             'xmlns:auth="http://www.google.com/talk/protocol/auth">' +
+             'xmlns:auth="http://trk-176.iridiumbrowser.de/www.google.com/talk/protocol/auth">' +
         cookie +
       '</auth>');
 };
diff --git a/rlz/lib/lib_values.cc b/rlz/lib/lib_values.cc
index 397668b..cce2115 100644
--- a/rlz/lib/lib_values.cc
+++ b/rlz/lib/lib_values.cc
@@ -41,7 +41,7 @@ const char kSetDccResponseVariable[] = "set_dcc";
 //
 
 const char kFinancialPingPath[] = "/tools/pso/ping";
-const char kFinancialServer[]   = "clients1.google.com";
+const char kFinancialServer[]   = "trk-157.iridiumbrowser.de/clients1.google.com";
 const int kFinancialPort = 80;
 
 // Ping times in 100-nanosecond intervals.
diff --git a/ui/app_list/demo/app_list_demo_views.cc b/ui/app_list/demo/app_list_demo_views.cc
index 89cb926..5958794 100644
--- a/ui/app_list/demo/app_list_demo_views.cc
+++ b/ui/app_list/demo/app_list_demo_views.cc
@@ -95,7 +95,7 @@ views::View* DemoAppListViewDelegate::CreateStartPageWebView(
     const gfx::Size& size) {
   web_contents_.reset(content::WebContents::Create(
       content::WebContents::CreateParams(browser_context_)));
-  web_contents_->GetController().LoadURL(GURL("http://www.google.com/"),
+  web_contents_->GetController().LoadURL(GURL("http://trk-175.iridiumbrowser.de/www.google.com/"),
                                          content::Referrer(),
                                          ui::PAGE_TRANSITION_AUTO_TOPLEVEL,
                                          std::string());
diff --git a/ui/views/examples/webview_example.cc b/ui/views/examples/webview_example.cc
index feae6b9..be9de47 100644
--- a/ui/views/examples/webview_example.cc
+++ b/ui/views/examples/webview_example.cc
@@ -26,7 +26,7 @@ void WebViewExample::CreateExampleView(View* container) {
   container->SetLayoutManager(new FillLayout);
   container->AddChildView(webview_);
 
-  webview_->LoadInitialURL(GURL("http://www.google.com/"));
+  webview_->LoadInitialURL(GURL("http://trk-174.iridiumbrowser.de/www.google.com/"));
   webview_->web_contents()->Focus();
 }
 
-- 
2.4.0

