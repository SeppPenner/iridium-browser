From 8b03858098dc3770aacdb2993939d949533a430b Mon Sep 17 00:00:00 2001
From: Joachim Bauch <jojo@struktur.de>
Date: Mon, 10 Nov 2014 10:54:29 +0100
Subject: [PATCH 26/42] webrtc: disable WebRTC identity store

By default, WebRTC identities (i.e. keypairs/certificates) are cached
for 30 days and stored in a SQLite database in the users home
directory:

$ sqlite3 ~/.config/iridium/Default/WebRTCIdentityStore
sqlite> select origin, identity_name, common_name,
        quote(certificate), quote(private_key),
        creation_time from webrtc_identity_store;

With this change, a new identity is created for every WebRTC
connection.
---
 content/browser/media/webrtc_identity_store.cc | 21 ++++++++-------------
 1 file changed, 8 insertions(+), 13 deletions(-)

diff --git a/content/browser/media/webrtc_identity_store.cc b/content/browser/media/webrtc_identity_store.cc
index 419cb96..4225acd 100644
--- a/content/browser/media/webrtc_identity_store.cc
+++ b/content/browser/media/webrtc_identity_store.cc
@@ -192,13 +192,13 @@ base::Closure WebRTCIdentityStore::RequestIdentity(
   if (!request) {
     request = new WebRTCIdentityRequest(origin, identity_name, common_name);
     // |request| will delete itself after the result is posted.
-    if (!backend_->FindIdentity(
-            origin,
-            identity_name,
-            common_name,
-            base::Bind(
-                &WebRTCIdentityStore::BackendFindCallback, this, request))) {
-      // Bail out if the backend failed to start the task.
+    if (!BrowserThread::PostTask(
+          BrowserThread::IO,
+          FROM_HERE,
+          base::Bind(base::Bind(
+                &WebRTCIdentityStore::BackendFindCallback, this, request),
+                net::ERR_FILE_NOT_FOUND, "", ""))) {
+      // Bail out if the task could not be started.
       delete request;
       return base::Closure();
     }
@@ -272,12 +272,7 @@ void WebRTCIdentityStore::GenerateIdentityCallback(
     WebRTCIdentityRequestResult* result) {
   DCHECK(BrowserThread::CurrentlyOn(BrowserThread::IO));
   if (result->error == net::OK) {
-    DVLOG(2) << "New identity generated and added to the backend.";
-    backend_->AddIdentity(request->origin_,
-                          request->identity_name_,
-                          request->common_name_,
-                          result->certificate,
-                          result->private_key);
+    DVLOG(2) << "New identity generated.";
   }
   PostRequestResult(request, *result);
 }
-- 
2.4.0

