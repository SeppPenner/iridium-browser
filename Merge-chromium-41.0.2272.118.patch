From e70e8f3cb073c5771c5f387b7750b1a57d8730c2 Mon Sep 17 00:00:00 2001
From: Jan Engelhardt <jengelh@inai.de>
Date: Thu, 2 Apr 2015 10:12:09 +0200
Subject: [PATCH 45/48] Merge chromium-41.0.2272.118

41.0.2272.118 does not exist as a standalone tarball from Google,
so we will not be doing a rebase, but instead merge the diff

	git diff 41.0.2272.104..41.0.2272.118
---
 .DEPS.git                                          |  6 +-
 DEPS                                               | 50 ++++++++--------
 ash/display/display_manager.cc                     | 27 ++++++---
 ash/display/display_manager_unittest.cc            | 22 +++++++
 cc/resources/tile_manager.cc                       |  4 ++
 .../chromeos/file_manager/file_manager_jstest.cc   |  5 ++
 .../chromeos/login/app_launch_controller.cc        | 11 +++-
 .../browser/chromeos/login/app_launch_controller.h |  1 +
 .../extensions/browser_actions_container_view.h    | 21 +++++--
 .../extensions/browser_actions_container_view.mm   | 41 +++++++------
 .../browser_actions_container_view_unittest.mm     | 19 ++++++
 .../cocoa/extensions/browser_actions_controller.mm |  4 +-
 .../browser/ui/cocoa/toolbar/toolbar_controller.h  |  3 +
 .../browser/ui/cocoa/toolbar/toolbar_controller.mm | 63 +++++++++++++-------
 content/browser/gamepad/gamepad_provider.cc        | 20 +++----
 .../renderer_host/p2p/socket_dispatcher_host.cc    |  8 ++-
 .../gpu/media/dxva_video_decode_accelerator.cc     | 22 +++----
 content/renderer/render_frame_impl.cc              | 10 +++-
 content/renderer/render_frame_impl.h               |  5 +-
 content/renderer/render_view_browsertest.cc        | 25 ++++++++
 content/renderer/render_view_impl.h                |  1 +
 gpu/command_buffer/service/gles2_cmd_decoder.cc    | 49 ++++++++++------
 .../org/chromium/media/VideoCaptureCamera2.java    |  9 ++-
 third_party/harfbuzz-ng/src/hb-buffer.cc           |  2 +-
 .../foreground/js/metadata/compiled_resources.gyp  |  1 +
 .../foreground/js/metadata/exif_parser.js          | 18 ++++++
 .../js/metadata/exif_parser_unittest.html          | 20 +++++++
 .../foreground/js/metadata/exif_parser_unittest.js | 67 ++++++++++++++++++++++
 28 files changed, 402 insertions(+), 132 deletions(-)
 create mode 100644 ui/file_manager/file_manager/foreground/js/metadata/exif_parser_unittest.html
 create mode 100644 ui/file_manager/file_manager/foreground/js/metadata/exif_parser_unittest.js

diff --git a/.DEPS.git b/.DEPS.git
index cffcb92..1674317 100644
--- a/.DEPS.git
+++ b/.DEPS.git
@@ -7,7 +7,7 @@ vars = {
     'eyes-free':
          'http://eyes-free.googlecode.com/svn',
     'webkit_rev':
-         '@4cce46af7a3c2a6b9fc7d9214ab5f5bc50da5d83',
+         '@3cb178f86d9875fed2022c8adc274a9305d952b9',
     'blink':
          'http://src.chromium.org/blink',
     'skia':
@@ -230,7 +230,7 @@ deps = {
     'src/third_party/sfntly/cpp/src':
         Var('git_url') + '/external/sfntly/cpp/src.git@1bdaae8fc788a5ac8936d68bf24f37d977a13dac',
     'src/third_party/skia':
-        Var('git_url') + '/skia.git@aa7b421902ec33245cb1f4b65d76860187dec7ef',
+        Var('git_url') + '/skia.git@865ac46c515e2b574a79cacc399e2d08bb9acde8',
     'src/third_party/smhasher/src':
         Var('git_url') + '/external/smhasher.git@e87738e57558e0ec472b2fc3a643b838e5b6e88f',
     'src/third_party/snappy/src':
@@ -262,7 +262,7 @@ deps = {
     'src/tools/swarming_client':
         Var('git_url') + '/external/swarming.client.git@c44f5725d2243ada2d8b63adf85ca76acb50fee6',
     'src/v8':
-        Var('git_url') + '/v8/v8.git@164d5a72d0ecdb4379d14a50dabcc2ac0e7e8b8f',
+        Var('git_url') + '/v8/v8.git@901b67916dc2626158f42af5b5c520ede8752da2',
 }
 
 deps_os = {
diff --git a/DEPS b/DEPS
index ab2eb17..5019e4be 100644
--- a/DEPS
+++ b/DEPS
@@ -174,8 +174,10 @@ deps_os = {
   'unix': {
     'src/third_party/fontconfig/src':
       (Var("git.chromium.org")) + '/external/fontconfig.git@f16c3118e25546c1b749f9823c51827a60aeb5c1',
-    'src/third_party/freetype2/src':
-      (Var("git.chromium.org")) + '/chromium/src/third_party/freetype2.git@495a23fce9cd125f715dc20643d14fed226d76ac',
+    'build/third_party/cbuildbot_chromite':
+      (Var("git.chromium.org")) + '/chromiumos/chromite.git@8eba257003357ca945528fb93dadd2c4d16b7d11',
+    'src/third_party/cros_system_api':
+      (Var("git.chromium.org")) + '/chromiumos/platform/system_api.git@7678688b4405325d32fdfb45064128b9accb9a71',
     'src/third_party/pyelftools':
       (Var("git.chromium.org")) + '/chromiumos/third_party/pyelftools.git@19b3e610c86fcadb837d252c794cb5e8008826ae',
     'src/third_party/chromite':
@@ -186,24 +188,20 @@ deps_os = {
       (Var("git.chromium.org")) + '/chromium/deps/xdg-utils.git@d80274d5869b17b8c9067a1022e4416ee7ed5e0d',
     'src/third_party/undoview':
       (Var("git.chromium.org")) + '/chromium/deps/undoview.git@3ba503e248f3cdbd81b78325a24ece0984637559',
-    'src/third_party/cros_system_api':
-      (Var("git.chromium.org")) + '/chromiumos/platform/system_api.git@7678688b4405325d32fdfb45064128b9accb9a71',
-    'src/third_party/stp/src':
-      (Var("git.chromium.org")) + '/external/github.com/stp/stp.git@fc94a599207752ab4d64048204f0c88494811b62',
+    'src/chrome/tools/test/reference_build/chrome_linux':
+      (Var("git.chromium.org")) + '/chromium/reference_builds/chrome_linux64.git@033d053a528e820e1de3e2db766678d862a86b36',
     'src/third_party/swig/linux':
       (Var("git.chromium.org")) + '/chromium/deps/swig/linux.git@866b8e0e0e0cfe99ebe608260030916ca0c3f92d',
     'src/third_party/liblouis/src':
       (Var("git.chromium.org")) + '/external/liblouis-github.git@5f9c03f2a3478561deb6ae4798175094be8a26c2',
-    'build/third_party/cbuildbot_chromite':
-      (Var("git.chromium.org")) + '/chromiumos/chromite.git@8eba257003357ca945528fb93dadd2c4d16b7d11',
+    'src/third_party/freetype2/src':
+      (Var("git.chromium.org")) + '/chromium/src/third_party/freetype2.git@495a23fce9cd125f715dc20643d14fed226d76ac',
     'src/third_party/lss':
       (Var("git.chromium.org")) + '/external/linux-syscall-support/lss.git@952107fa7cea0daaabead28c0e92d579bee517eb',
-    'src/chrome/tools/test/reference_build/chrome_linux':
-      (Var("git.chromium.org")) + '/chromium/reference_builds/chrome_linux64.git@033d053a528e820e1de3e2db766678d862a86b36'
+    'src/third_party/stp/src':
+      (Var("git.chromium.org")) + '/external/github.com/stp/stp.git@fc94a599207752ab4d64048204f0c88494811b62'
   },
   'android': {
-    'src/third_party/httpcomponents-client':
-      (Var("git.chromium.org")) + '/chromium/deps/httpcomponents-client.git@285c4dafc5de0e853fa845dce5773e223219601c',
     'src/third_party/jarjar':
       (Var("git.chromium.org")) + '/chromium/deps/jarjar.git@2e1ead4c68c450e0b77fe49e3f9137842b8b6920',
     'src/third_party/appurify-python/src':
@@ -212,8 +210,6 @@ deps_os = {
       (Var("git.chromium.org")) + '/external/junit.git@45a44647e7306262162e1346b750c3209019f2e1',
     'src/third_party/android_tools':
       (Var("git.chromium.org")) + '/android_tools.git@56b3d3e8ce785e468eac3262cd6b107ebe569e94',
-    'src/third_party/requests/src':
-      (Var("git.chromium.org")) + '/external/github.com/kennethreitz/requests.git@f172b30356d821d180fa4ecfa3e71c7274a32de4',
     'src/third_party/freetype':
       (Var("git.chromium.org")) + '/chromium/src/third_party/freetype.git@fd6919ac23f74b876c209aba5eaa2be662086391',
     'src/third_party/apache-mime4j':
@@ -221,18 +217,22 @@ deps_os = {
     'src/third_party/mockito/src':
       (Var("git.chromium.org")) + '/external/mockito/mockito.git@ed99a52e94a84bd7c467f2443b475a22fcc6ba8e',
     'src/pdf': None,
-    'src/third_party/findbugs':
-      (Var("git.chromium.org")) + '/chromium/deps/findbugs.git@7f69fa78a6db6dc31866d09572a0e356e921bf12',
+    'src/third_party/elfutils/src':
+      (Var("git.chromium.org")) + '/external/elfutils.git@249673729a7e5dbd5de4f3760bdcaa3d23d154d7',
     'src/third_party/lss':
       (Var("git.chromium.org")) + '/external/linux-syscall-support/lss.git@952107fa7cea0daaabead28c0e92d579bee517eb',
+    'src/third_party/findbugs':
+      (Var("git.chromium.org")) + '/chromium/deps/findbugs.git@7f69fa78a6db6dc31866d09572a0e356e921bf12',
+    'src/third_party/httpcomponents-client':
+      (Var("git.chromium.org")) + '/chromium/deps/httpcomponents-client.git@285c4dafc5de0e853fa845dce5773e223219601c',
     'src/third_party/android_protobuf/src':
       (Var("git.chromium.org")) + '/external/android_protobuf.git@94f522f907e3f34f70d9e7816b947e62fddbb267',
     'src/third_party/httpcomponents-core':
       (Var("git.chromium.org")) + '/chromium/deps/httpcomponents-core.git@9f7180a96f8fa5cab23f793c14b413356d419e62',
     'src/third_party/jsr-305/src':
       (Var("git.chromium.org")) + '/external/jsr-305.git@642c508235471f7220af6d5df2d3210e3bfc0919',
-    'src/third_party/elfutils/src':
-      (Var("git.chromium.org")) + '/external/elfutils.git@249673729a7e5dbd5de4f3760bdcaa3d23d154d7'
+    'src/third_party/requests/src':
+      (Var("git.chromium.org")) + '/external/github.com/kennethreitz/requests.git@f172b30356d821d180fa4ecfa3e71c7274a32de4'
   }
 }
 
@@ -245,6 +245,8 @@ deps = {
     (Var("git.chromium.org")) + '/external/bidichecker/lib.git@97f2aa645b74c28c57eca56992235c79850fa9e0',
   'src/third_party/libc++/trunk':
     (Var("git.chromium.org")) + '/chromium/llvm-project/libcxx.git@48198f9110397fff47fe7c37cbfa296be7d44d3d',
+  'src/third_party/colorama/src':
+    (Var("git.chromium.org")) + '/external/colorama.git@799604a1041e9b3bc5d2789ecbd7e8db2e18e6b8',
   'src/third_party/usrsctp/usrsctplib':
     (Var("git.chromium.org")) + '/external/usrsctplib.git@190c8cbfcf8fd810aa09e0fab4ca62a8ce724e14',
   'src/third_party/openmax_dl':
@@ -258,7 +260,7 @@ deps = {
   'src/media/cdm/ppapi/api':
     (Var("git.chromium.org")) + '/chromium/cdm.git@7b7c6cc620e13c8057b4b6bff19e5955feb2c8fa',
   'src/third_party/skia':
-    (Var("git.chromium.org")) + '/skia.git@aa7b421902ec33245cb1f4b65d76860187dec7ef',
+    (Var("git.chromium.org")) + '/skia.git@865ac46c515e2b574a79cacc399e2d08bb9acde8',
   'src/tools/swarming_client':
     (Var("git.chromium.org")) + '/external/swarming.client.git@c44f5725d2243ada2d8b63adf85ca76acb50fee6',
   'src/chrome/test/data/perf/frame_rate/content':
@@ -351,14 +353,14 @@ deps = {
     (Var("git.chromium.org")) + '/chromium/deps/icu.git@51c1a4ce5f362676aa1f1cfdb5b7e52edabfa5aa',
   'src/third_party/opus/src':
     (Var("git.chromium.org")) + '/chromium/deps/opus.git@cae696156f1e60006e39821e79a1811ae1933c69',
-  'src/third_party/colorama/src':
-    (Var("git.chromium.org")) + '/external/colorama.git@799604a1041e9b3bc5d2789ecbd7e8db2e18e6b8',
+  'src/tools/grit':
+    (Var("git.chromium.org")) + '/external/grit-i18n.git@a5890a8118c0c80cc0560e6d8d5cf65e5d725509',
   'src/third_party/snappy/src':
     (Var("git.chromium.org")) + '/external/snappy.git@762bb32f0c9d2f31ba4958c7c0933d22e80c20bf',
   'src/third_party/webpagereplay':
     (Var("git.chromium.org")) + '/external/web-page-replay.git@2f7b704b8b567983c040f555d3e46f9766db8e87',
   'src/third_party/WebKit':
-    (Var("git.chromium.org")) + '/chromium/blink.git@4cce46af7a3c2a6b9fc7d9214ab5f5bc50da5d83',
+    (Var("git.chromium.org")) + '/chromium/blink.git@3cb178f86d9875fed2022c8adc274a9305d952b9',
   'src/breakpad/src':
     (Var("git.chromium.org")) + '/external/google-breakpad/src.git@3a09bb0766eba3ef1766a1617caf1bb5460de85e',
   'src/third_party/py_trace_event/src':
@@ -367,14 +369,12 @@ deps = {
     (Var("git.chromium.org")) + '/chromium/deps/hunspell.git@c956c0e97af00ef789afb2f64d02c9a5a50e6eb1',
   'src/tools/deps2git':
     (Var("git.chromium.org")) + '/chromium/tools/deps2git.git@f04828eb0b5acd3e7ad983c024870f17f17b06d9',
-  'src/tools/grit':
-    (Var("git.chromium.org")) + '/external/grit-i18n.git@a5890a8118c0c80cc0560e6d8d5cf65e5d725509',
   'src/third_party/libjpeg_turbo':
     (Var("git.chromium.org")) + '/chromium/deps/libjpeg_turbo.git@034e9a9747e0983bc19808ea70e469bc8342081f',
   'src/testing/gtest':
     (Var("git.chromium.org")) + '/external/googletest.git@8245545b6dc9c4703e6496d1efd19e975ad2b038',
   'src/v8':
-    (Var("git.chromium.org")) + '/v8/v8.git@164d5a72d0ecdb4379d14a50dabcc2ac0e7e8b8f',
+    (Var("git.chromium.org")) + '/v8/v8.git@901b67916dc2626158f42af5b5c520ede8752da2',
   'src/third_party/pywebsocket/src':
     (Var("git.chromium.org")) + '/external/pywebsocket/src.git@cb349e87ddb30ff8d1fa1a89be39cec901f4a29c',
   'src/third_party/libvpx':
diff --git a/ash/display/display_manager.cc b/ash/display/display_manager.cc
index c407da4..7d8967f 100644
--- a/ash/display/display_manager.cc
+++ b/ash/display/display_manager.cc
@@ -810,14 +810,21 @@ void DisplayManager::UpdateDisplays(
   // http://crbug.com/155948.
   if (display_changes.empty() && added_display_indices.empty() &&
       removed_displays.empty()) {
-    // When changing from software mirroring mode to sinlge display mode, it
-    // is possible there is no need to update |displays_| and we early out
-    // here. But we still want to run the PostDisplayConfigurationChange()
-    // cause there are some clients need to act on this, e.g.
-    // TouchTransformerController needs to adjust the TouchTransformer when
-    // switching from dual displays to single display.
-    if (delegate_)
+    // When changing from software mirroring mode to sinlge display
+    // mode, it is possible there is no need to update |displays_| and
+    // we early out here. But we still need to update the mirroring
+    // window and call the PostDisplayConfigurationChange() cause
+    // there are some clients need to act on this,
+    // e.g. TouchTransformerController needs to adjust the
+    // TouchTransformer when/ switching from dual displays to single
+    // display.
+    if (delegate_) {
+      if (HasSoftwareMirroringDisplay())
+        CreateMirrorWindowAsyncIfAny();
+      else
+        delegate_->CloseMirroringDisplay();
       delegate_->PostDisplayConfigurationChange();
+    }
     return;
   }
 
@@ -911,8 +918,7 @@ void DisplayManager::UpdateDisplays(
   // Create the mirroring window asynchronously after all displays
   // are added so that it can mirror the display newly added. This can
   // happen when switching from dock mode to software mirror mode.
-  if (has_mirroring_display && delegate_)
-    CreateMirrorWindowAsyncIfAny();
+  CreateMirrorWindowAsyncIfAny();
 }
 
 const gfx::Display& DisplayManager::GetDisplayAt(size_t index) const {
@@ -1062,6 +1068,9 @@ bool DisplayManager::UpdateDisplayBounds(int64 display_id,
 }
 
 void DisplayManager::CreateMirrorWindowAsyncIfAny() {
+  // Do not post a task if the software mirroring doesn't exist.
+  if (!HasSoftwareMirroringDisplay() || !delegate_)
+    return;
   base::MessageLoopForUI::current()->PostTask(
       FROM_HERE,
       base::Bind(&DisplayManager::CreateMirrorWindowIfAny,
diff --git a/ash/display/display_manager_unittest.cc b/ash/display/display_manager_unittest.cc
index e3e7f8c..e7f71c4 100644
--- a/ash/display/display_manager_unittest.cc
+++ b/ash/display/display_manager_unittest.cc
@@ -9,6 +9,7 @@
 #include "ash/display/display_info.h"
 #include "ash/display/display_layout_store.h"
 #include "ash/display/display_util.h"
+#include "ash/display/mirror_window_controller.h"
 #include "ash/screen_util.h"
 #include "ash/shell.h"
 #include "ash/test/ash_test_base.h"
@@ -1342,6 +1343,27 @@ TEST_F(DisplayManagerTest, SoftwareMirroring) {
   Shell::GetScreen()->RemoveObserver(&display_observer);
 }
 
+TEST_F(DisplayManagerTest, SingleDisplayToSoftwareMirroring) {
+  if (!SupportsMultipleDisplays())
+    return;
+  UpdateDisplay("600x400");
+
+  DisplayManager* display_manager = Shell::GetInstance()->display_manager();
+  display_manager->SetSecondDisplayMode(DisplayManager::MIRRORING);
+  UpdateDisplay("600x400,600x400");
+
+  EXPECT_TRUE(display_manager->IsMirrored());
+  EXPECT_EQ(1U, display_manager->GetNumDisplays());
+  DisplayController* display_controller =
+      ash::Shell::GetInstance()->display_controller();
+  EXPECT_TRUE(display_controller->mirror_window_controller()->GetWindow());
+
+  UpdateDisplay("600x400");
+  EXPECT_FALSE(display_manager->IsMirrored());
+  EXPECT_EQ(1U, display_manager->GetNumDisplays());
+  EXPECT_FALSE(display_controller->mirror_window_controller()->GetWindow());
+}
+
 #if defined(OS_CHROMEOS)
 // Make sure this does not cause any crashes. See http://crbug.com/412910
 // This test is limited to OS_CHROMEOS because CursorCompositingEnabled is only
diff --git a/cc/resources/tile_manager.cc b/cc/resources/tile_manager.cc
index dff3a52..205d92d 100644
--- a/cc/resources/tile_manager.cc
+++ b/cc/resources/tile_manager.cc
@@ -150,6 +150,10 @@ class ImageDecodeTaskImpl : public ImageDecodeTask {
     // This will cause the image referred to by pixel ref to be decoded.
     pixel_ref_->lockPixels();
     pixel_ref_->unlockPixels();
+
+    // Release the reference after decoding image to ensure that it is not
+    // kept alive unless needed.
+    pixel_ref_.clear();
   }
 
   // Overridden from TileTask:
diff --git a/chrome/browser/chromeos/file_manager/file_manager_jstest.cc b/chrome/browser/chromeos/file_manager/file_manager_jstest.cc
index 2f92513..f046c6c 100644
--- a/chrome/browser/chromeos/file_manager/file_manager_jstest.cc
+++ b/chrome/browser/chromeos/file_manager/file_manager_jstest.cc
@@ -109,3 +109,8 @@ IN_PROC_BROWSER_TEST_F(FileManagerJsTest, ThumbnailLoader) {
   RunTest(base::FilePath(
       FILE_PATH_LITERAL("foreground/js/thumbnail_loader_unittest.html")));
 }
+
+IN_PROC_BROWSER_TEST_F(FileManagerJsTest, ExifParser) {
+  RunTest(base::FilePath(FILE_PATH_LITERAL(
+      "foreground/js/metadata/exif_parser_unittest.html")));
+}
diff --git a/chrome/browser/chromeos/login/app_launch_controller.cc b/chrome/browser/chromeos/login/app_launch_controller.cc
index fa62009..bcf8b3a 100644
--- a/chrome/browser/chromeos/login/app_launch_controller.cc
+++ b/chrome/browser/chromeos/login/app_launch_controller.cc
@@ -254,7 +254,13 @@ void AppLaunchController::OnProfileLoadFailed(
   OnLaunchFailed(error);
 }
 
+void AppLaunchController::ClearNetworkWaitTimer() {
+  waiting_for_network_ = false;
+  network_wait_timer_.Stop();
+}
+
 void AppLaunchController::CleanUp() {
+  ClearNetworkWaitTimer();
   kiosk_profile_loader_.reset();
   startup_app_launcher_.reset();
   splash_wait_timer_.Stop();
@@ -358,8 +364,7 @@ void AppLaunchController::OnInstallingApp() {
   app_launch_splash_screen_actor_->UpdateAppLaunchState(
       AppLaunchSplashScreenActor::APP_LAUNCH_STATE_INSTALLING_APPLICATION);
 
-  waiting_for_network_ = false;
-  network_wait_timer_.Stop();
+  ClearNetworkWaitTimer();
   app_launch_splash_screen_actor_->ToggleNetworkConfig(false);
 
   // We have connectivity at this point, so we can skip the network
@@ -383,6 +388,8 @@ void AppLaunchController::OnReadyToLaunch() {
   if (splash_wait_timer_.IsRunning())
     return;
 
+  ClearNetworkWaitTimer();
+
   const int64 time_taken_ms = (base::TimeTicks::Now() -
       base::TimeTicks::FromInternalValue(launch_splash_start_time_)).
       InMilliseconds();
diff --git a/chrome/browser/chromeos/login/app_launch_controller.h b/chrome/browser/chromeos/login/app_launch_controller.h
index 74a58e9..326cdb2 100644
--- a/chrome/browser/chromeos/login/app_launch_controller.h
+++ b/chrome/browser/chromeos/login/app_launch_controller.h
@@ -64,6 +64,7 @@ class AppLaunchController
   // A class to watch app window creation.
   class AppWindowWatcher;
 
+  void ClearNetworkWaitTimer();
   void CleanUp();
   void OnNetworkWaitTimedout();
 
diff --git a/chrome/browser/ui/cocoa/extensions/browser_actions_container_view.h b/chrome/browser/ui/cocoa/extensions/browser_actions_container_view.h
index ccdbca3..c2d0a3f 100644
--- a/chrome/browser/ui/cocoa/extensions/browser_actions_container_view.h
+++ b/chrome/browser/ui/cocoa/extensions/browser_actions_container_view.h
@@ -18,15 +18,18 @@ extern NSString* const kBrowserActionGrippyDraggingNotification;
 // Sent when a user-initiated drag to resize the container has finished.
 extern NSString* const kBrowserActionGrippyDragFinishedNotification;
 
-// Sent before the dragging will resize the container.
-extern NSString* const kBrowserActionGrippyWillDragNotification;
-
 // Sent when the Browser Actions container view is about to animate.
 extern NSString* const kBrowserActionsContainerWillAnimate;
 
 // Key which is used to notify the translation with delta.
 extern NSString* const kTranslationWithDelta;
 
+class BrowserActionsContainerViewSizeDelegate {
+ public:
+  virtual CGFloat GetMaxAllowedWidth() = 0;
+  virtual ~BrowserActionsContainerViewSizeDelegate() {}
+};
+
 // The view that encompasses the Browser Action buttons in the toolbar and
 // provides mechanisms for resizing.
 @interface BrowserActionsContainerView : NSView {
@@ -41,8 +44,9 @@ extern NSString* const kTranslationWithDelta;
   // Used to cache the previous x-pos of the frame rect for resizing purposes.
   CGFloat lastXPos_;
 
-  // The maximum width of the container.
-  CGFloat maxWidth_;
+  // The maximum width the container could want; i.e., the width required to
+  // display all the icons.
+  CGFloat maxDesiredWidth_;
 
   // Whether the container is currently being resized by the user.
   BOOL userIsResizing_;
@@ -67,6 +71,10 @@ extern NSString* const kTranslationWithDelta;
   // to large.
   BOOL grippyPinned_;
 
+  // The size delegate, if any.
+  // Weak; delegate is responsible for adding/removing itself.
+  BrowserActionsContainerViewSizeDelegate* sizeDelegate_;
+
   base::scoped_nsobject<NSViewAnimation> resizeAnimation_;
 }
 
@@ -93,8 +101,9 @@ extern NSString* const kTranslationWithDelta;
 @property(nonatomic) BOOL canDragRight;
 @property(nonatomic) BOOL grippyPinned;
 @property(nonatomic,getter=isResizable) BOOL resizable;
-@property(nonatomic) CGFloat maxWidth;
+@property(nonatomic) CGFloat maxDesiredWidth;
 @property(readonly, nonatomic) BOOL userIsResizing;
+@property(nonatomic) BrowserActionsContainerViewSizeDelegate* delegate;
 
 @end
 
diff --git a/chrome/browser/ui/cocoa/extensions/browser_actions_container_view.mm b/chrome/browser/ui/cocoa/extensions/browser_actions_container_view.mm
index 3fa8ee3..057254e 100644
--- a/chrome/browser/ui/cocoa/extensions/browser_actions_container_view.mm
+++ b/chrome/browser/ui/cocoa/extensions/browser_actions_container_view.mm
@@ -15,8 +15,6 @@ NSString* const kBrowserActionGrippyDraggingNotification =
     @"BrowserActionGrippyDraggingNotification";
 NSString* const kBrowserActionGrippyDragFinishedNotification =
     @"BrowserActionGrippyDragFinishedNotification";
-NSString* const kBrowserActionGrippyWillDragNotification =
-    @"BrowserActionGrippyWillDragNotification";
 NSString* const kBrowserActionsContainerWillAnimate =
     @"BrowserActionsContainerWillAnimate";
 NSString* const kTranslationWithDelta =
@@ -32,6 +30,9 @@ const CGFloat kMinimumContainerWidth = 10.0;
 // Returns the cursor that should be shown when hovering over the grippy based
 // on |canDragLeft_| and |canDragRight_|.
 - (NSCursor*)appropriateCursorForGrippy;
+
+// Returns the maximum allowed size for the container.
+- (CGFloat)maxAllowedWidth;
 @end
 
 @implementation BrowserActionsContainerView
@@ -39,8 +40,9 @@ const CGFloat kMinimumContainerWidth = 10.0;
 @synthesize canDragLeft = canDragLeft_;
 @synthesize canDragRight = canDragRight_;
 @synthesize grippyPinned = grippyPinned_;
-@synthesize maxWidth = maxWidth_;
+@synthesize maxDesiredWidth = maxDesiredWidth_;
 @synthesize userIsResizing = userIsResizing_;
+@synthesize delegate = delegate_;
 
 #pragma mark -
 #pragma mark Overridden Class Functions
@@ -126,27 +128,20 @@ const CGFloat kMinimumContainerWidth = 10.0;
   CGFloat withDelta = location.x - dX;
   canDragRight_ = (withDelta >= initialDragPoint_.x) &&
       (NSWidth(containerFrame) > kMinimumContainerWidth);
-  canDragLeft_ = (withDelta <= initialDragPoint_.x) &&
-      (NSWidth(containerFrame) < maxWidth_);
-
-  // Notify others to see whether this dragging is allowed.
-  if ((dX < 0.0 && canDragLeft_) || (dX > 0.0 && canDragRight_)) {
-    NSDictionary* userInfo = @{ kTranslationWithDelta : @(dX) };
-    [[NSNotificationCenter defaultCenter]
-        postNotificationName:kBrowserActionGrippyWillDragNotification
-                      object:self
-                    userInfo:userInfo];
-  }
+  CGFloat maxAllowedWidth = [self maxAllowedWidth];
+  containerFrame.size.width =
+      std::max(NSWidth(containerFrame) - dX, kMinimumContainerWidth);
+  canDragLeft_ = withDelta <= initialDragPoint_.x &&
+      NSWidth(containerFrame) < maxDesiredWidth_ &&
+      NSWidth(containerFrame) < maxAllowedWidth;
 
   if ((dX < 0.0 && !canDragLeft_) || (dX > 0.0 && !canDragRight_))
     return;
 
-  containerFrame.size.width =
-      std::max(NSWidth(containerFrame) - dX, kMinimumContainerWidth);
-
-  if (NSWidth(containerFrame) == kMinimumContainerWidth)
+  if (NSWidth(containerFrame) <= kMinimumContainerWidth)
     return;
 
+  grippyPinned_ = NSWidth(containerFrame) >= maxAllowedWidth;
   containerFrame.origin.x += dX;
 
   [self setFrame:containerFrame];
@@ -169,11 +164,17 @@ const CGFloat kMinimumContainerWidth = 10.0;
 - (void)resizeToWidth:(CGFloat)width animate:(BOOL)animate {
   width = std::max(width, kMinimumContainerWidth);
   NSRect frame = [self frame];
+
+  CGFloat maxAllowedWidth = [self maxAllowedWidth];
+  width = std::min(maxAllowedWidth, width);
+
   lastXPos_ = frame.origin.x;
   CGFloat dX = frame.size.width - width;
   frame.size.width = width;
   NSRect newFrame = NSOffsetRect(frame, dX, 0);
 
+  grippyPinned_ = width == maxAllowedWidth;
+
   [self stopAnimation];
 
   if (animate) {
@@ -236,4 +237,8 @@ const CGFloat kMinimumContainerWidth = 10.0;
   return retVal;
 }
 
+- (CGFloat)maxAllowedWidth {
+  return delegate_ ? delegate_->GetMaxAllowedWidth() : CGFLOAT_MAX;
+}
+
 @end
diff --git a/chrome/browser/ui/cocoa/extensions/browser_actions_container_view_unittest.mm b/chrome/browser/ui/cocoa/extensions/browser_actions_container_view_unittest.mm
index 6ccaa44..6610ca2 100644
--- a/chrome/browser/ui/cocoa/extensions/browser_actions_container_view_unittest.mm
+++ b/chrome/browser/ui/cocoa/extensions/browser_actions_container_view_unittest.mm
@@ -12,6 +12,19 @@ namespace {
 
 const CGFloat kContainerHeight = 15.0;
 const CGFloat kMinimumContainerWidth = 10.0;
+const CGFloat kMaxAllowedWidthForTest = 50.0;
+
+class BrowserActionsContainerTestDelegate
+    : public BrowserActionsContainerViewSizeDelegate {
+ public:
+  BrowserActionsContainerTestDelegate() {}
+  ~BrowserActionsContainerTestDelegate() override {}
+
+  CGFloat GetMaxAllowedWidth() override { return kMaxAllowedWidthForTest; }
+
+ private:
+  DISALLOW_COPY_AND_ASSIGN(BrowserActionsContainerTestDelegate);
+};
 
 class BrowserActionsContainerViewTest : public CocoaTest {
  public:
@@ -64,6 +77,12 @@ TEST_F(BrowserActionsContainerViewTest, SetWidthTests) {
   [view_ resizeToWidth:35.0 animate:NO];
   EXPECT_EQ(35.0, NSWidth([view_ frame]));
   EXPECT_EQ(35.0, NSWidth([view_ animationEndFrame]));
+
+  BrowserActionsContainerTestDelegate delegate;
+  [view_ setDelegate:&delegate];
+  [view_ resizeToWidth:kMaxAllowedWidthForTest + 10.0 animate:NO];
+  EXPECT_EQ(kMaxAllowedWidthForTest, NSWidth([view_ frame]));
+  [view_ setDelegate:nil];
 }
 
 }  // namespace
diff --git a/chrome/browser/ui/cocoa/extensions/browser_actions_controller.mm b/chrome/browser/ui/cocoa/extensions/browser_actions_controller.mm
index e78fa4c..594f2c0 100644
--- a/chrome/browser/ui/cocoa/extensions/browser_actions_controller.mm
+++ b/chrome/browser/ui/cocoa/extensions/browser_actions_controller.mm
@@ -460,7 +460,7 @@ void ToolbarActionsBarBridge::OnOverflowedActionWantsToRunChanged(
              name:kBrowserActionButtonDraggingNotification
            object:newButton];
 
-  [containerView_ setMaxWidth:toolbarActionsBar_->GetMaximumWidth()];
+  [containerView_ setMaxDesiredWidth:toolbarActionsBar_->GetMaximumWidth()];
 }
 
 - (void)redraw {
@@ -515,7 +515,7 @@ void ToolbarActionsBarBridge::OnOverflowedActionWantsToRunChanged(
   [button onRemoved];
   [buttons_ removeObject:button];
 
-  [containerView_ setMaxWidth:toolbarActionsBar_->GetMaximumWidth()];
+  [containerView_ setMaxDesiredWidth:toolbarActionsBar_->GetMaximumWidth()];
 }
 
 - (void)removeAllViews {
diff --git a/chrome/browser/ui/cocoa/toolbar/toolbar_controller.h b/chrome/browser/ui/cocoa/toolbar/toolbar_controller.h
index bda42c1..71c54de 100644
--- a/chrome/browser/ui/cocoa/toolbar/toolbar_controller.h
+++ b/chrome/browser/ui/cocoa/toolbar/toolbar_controller.h
@@ -20,6 +20,7 @@
 @class BackForwardMenuController;
 class Browser;
 @class BrowserActionsContainerView;
+class BrowserActionsContainerViewSizeDelegate;
 @class BrowserActionsController;
 class CommandUpdater;
 class LocationBarViewMac;
@@ -68,6 +69,8 @@ class NotificationBridge;
   base::scoped_nsobject<BackForwardMenuController> backMenuController_;
   base::scoped_nsobject<BackForwardMenuController> forwardMenuController_;
   base::scoped_nsobject<BrowserActionsController> browserActionsController_;
+  scoped_ptr<BrowserActionsContainerViewSizeDelegate>
+      browserActionsContainerDelegate_;
 
   // Lazily-instantiated menu controller.
   base::scoped_nsobject<WrenchMenuController> wrenchMenuController_;
diff --git a/chrome/browser/ui/cocoa/toolbar/toolbar_controller.mm b/chrome/browser/ui/cocoa/toolbar/toolbar_controller.mm
index 815845d..58134b5 100644
--- a/chrome/browser/ui/cocoa/toolbar/toolbar_controller.mm
+++ b/chrome/browser/ui/cocoa/toolbar/toolbar_controller.mm
@@ -81,6 +81,42 @@ const CGFloat kMinimumLocationBarWidth = 100.0;
 // The amount of left padding that the wrench menu should have.
 const CGFloat kWrenchMenuLeftPadding = 3.0;
 
+class BrowserActionsContainerDelegate :
+    public BrowserActionsContainerViewSizeDelegate {
+ public:
+  BrowserActionsContainerDelegate(
+      AutocompleteTextField* location_bar,
+      BrowserActionsContainerView* browser_actions_container_view);
+  ~BrowserActionsContainerDelegate() override;
+
+ private:
+  // BrowserActionsContainerSizeDelegate:
+  CGFloat GetMaxAllowedWidth() override;
+
+  AutocompleteTextField* location_bar_;
+  BrowserActionsContainerView* browser_actions_container_;
+
+  DISALLOW_COPY_AND_ASSIGN(BrowserActionsContainerDelegate);
+};
+
+BrowserActionsContainerDelegate::BrowserActionsContainerDelegate(
+    AutocompleteTextField* location_bar,
+    BrowserActionsContainerView* browser_actions_container_view)
+    : location_bar_(location_bar),
+      browser_actions_container_(browser_actions_container_view) {
+  [browser_actions_container_ setDelegate:this];
+}
+
+BrowserActionsContainerDelegate::~BrowserActionsContainerDelegate() {
+  [browser_actions_container_ setDelegate:nil];
+}
+
+CGFloat BrowserActionsContainerDelegate::GetMaxAllowedWidth() {
+  CGFloat location_bar_flex =
+      NSWidth([location_bar_ frame]) - kMinimumLocationBarWidth;
+  return NSWidth([browser_actions_container_ frame]) + location_bar_flex;
+}
+
 }  // namespace
 
 @interface ToolbarController()
@@ -93,7 +129,6 @@ const CGFloat kWrenchMenuLeftPadding = 3.0;
 - (void)pinLocationBarToLeftOfBrowserActionsContainerAndAnimate:(BOOL)animate;
 - (void)maintainMinimumLocationBarWidth;
 - (void)adjustBrowserActionsContainerForNewWindow:(NSNotification*)notification;
-- (void)browserActionsContainerWillDrag:(NSNotification*)notification;
 - (void)browserActionsContainerDragged:(NSNotification*)notification;
 - (void)browserActionsVisibilityChanged:(NSNotification*)notification;
 - (void)browserActionsContainerWillAnimate:(NSNotification*)notification;
@@ -184,6 +219,8 @@ class NotificationBridge : public WrenchMenuBadgeController::Delegate {
 
 
 - (void)dealloc {
+  browserActionsContainerDelegate_.reset();
+
   // Unset ViewIDs of toolbar elements.
   // ViewIDs of |toolbarView|, |reloadButton_|, |locationBar_| and
   // |browserActionsContainerView_| are handled by themselves.
@@ -596,17 +633,15 @@ class NotificationBridge : public WrenchMenuBadgeController::Delegate {
 
 - (void)createBrowserActionButtons {
   if (!browserActionsController_.get()) {
+    browserActionsContainerDelegate_.reset(
+        new BrowserActionsContainerDelegate(locationBar_,
+                                            browserActionsContainerView_));
     browserActionsController_.reset([[BrowserActionsController alloc]
             initWithBrowser:browser_
               containerView:browserActionsContainerView_
              mainController:nil]);
     [[NSNotificationCenter defaultCenter]
         addObserver:self
-           selector:@selector(browserActionsContainerWillDrag:)
-               name:kBrowserActionGrippyWillDragNotification
-             object:browserActionsContainerView_];
-    [[NSNotificationCenter defaultCenter]
-        addObserver:self
            selector:@selector(browserActionsContainerDragged:)
                name:kBrowserActionGrippyDraggingNotification
              object:browserActionsContainerView_];
@@ -644,24 +679,10 @@ class NotificationBridge : public WrenchMenuBadgeController::Delegate {
 - (void)browserActionsContainerDragged:(NSNotification*)notification {
   CGFloat locationBarWidth = NSWidth([locationBar_ frame]);
   locationBarAtMinSize_ = locationBarWidth <= kMinimumLocationBarWidth;
-  [browserActionsContainerView_ setCanDragLeft:!locationBarAtMinSize_];
-  [browserActionsContainerView_ setGrippyPinned:locationBarAtMinSize_];
   [self adjustLocationSizeBy:
       [browserActionsContainerView_ resizeDeltaX] animate:NO];
 }
 
-- (void)browserActionsContainerWillDrag:(NSNotification*)notification {
-  CGFloat deltaX = [[notification.userInfo objectForKey:kTranslationWithDelta]
-      floatValue];
-  CGFloat locationBarWidth = NSWidth([locationBar_ frame]);
-  BOOL locationBarWillBeAtMinSize =
-      (locationBarWidth + deltaX) <= kMinimumLocationBarWidth;
-
-  // Prevent the |browserActionsContainerView_| from dragging if the width of
-  // location bar will reach the minimum.
-  [browserActionsContainerView_ setCanDragLeft:!locationBarWillBeAtMinSize];
-}
-
 - (void)browserActionsVisibilityChanged:(NSNotification*)notification {
   [self pinLocationBarToLeftOfBrowserActionsContainerAndAnimate:NO];
 }
@@ -672,7 +693,7 @@ class NotificationBridge : public WrenchMenuBadgeController::Delegate {
 
 - (void)pinLocationBarToLeftOfBrowserActionsContainerAndAnimate:(BOOL)animate {
   CGFloat locationBarXPos = NSMaxX([locationBar_ frame]);
-  CGFloat leftDistance;
+  CGFloat leftDistance = 0.0;
 
   if ([browserActionsContainerView_ isHidden]) {
     CGFloat edgeXPos = [wrenchButton_ frame].origin.x;
diff --git a/content/browser/gamepad/gamepad_provider.cc b/content/browser/gamepad/gamepad_provider.cc
index caa4cc8..39489e8 100644
--- a/content/browser/gamepad/gamepad_provider.cc
+++ b/content/browser/gamepad/gamepad_provider.cc
@@ -170,34 +170,34 @@ bool GamepadProvider::PadState::Match(const WebGamepad& pad) const {
   return connected_ == pad.connected &&
          axes_length_ == pad.axesLength &&
          buttons_length_ == pad.buttonsLength &&
-         memcmp(id_, pad.id, arraysize(id_)) == 0 &&
-         memcmp(mapping_, pad.mapping, arraysize(mapping_)) == 0;
+         memcmp(id_, pad.id, sizeof(id_)) == 0 &&
+         memcmp(mapping_, pad.mapping, sizeof(mapping_)) == 0;
 }
 
 void GamepadProvider::PadState::SetPad(const WebGamepad& pad) {
   connected_ = pad.connected;
   axes_length_ = pad.axesLength;
   buttons_length_ = pad.buttonsLength;
-  memcpy(id_, pad.id, arraysize(id_));
-  memcpy(mapping_, pad.mapping, arraysize(mapping_));
+  memcpy(id_, pad.id, sizeof(id_));
+  memcpy(mapping_, pad.mapping, sizeof(mapping_));
 }
 
 void GamepadProvider::PadState::SetDisconnected() {
   connected_ = false;
   axes_length_ = 0;
   buttons_length_ = 0;
-  memset(id_, 0, arraysize(id_));
-  memset(mapping_, 0, arraysize(mapping_));
+  memset(id_, 0, sizeof(id_));
+  memset(mapping_, 0, sizeof(mapping_));
 }
 
 void GamepadProvider::PadState::AsWebGamepad(WebGamepad* pad) {
   pad->connected = connected_;
   pad->axesLength = axes_length_;
   pad->buttonsLength = buttons_length_;
-  memcpy(pad->id, id_, arraysize(id_));
-  memcpy(pad->mapping, mapping_, arraysize(mapping_));
-  memset(pad->axes, 0, arraysize(pad->axes));
-  memset(pad->buttons, 0, arraysize(pad->buttons));
+  memcpy(pad->id, id_, sizeof(id_));
+  memcpy(pad->mapping, mapping_, sizeof(mapping_));
+  memset(pad->axes, 0, sizeof(pad->axes));
+  memset(pad->buttons, 0, sizeof(pad->buttons));
 }
 
 void GamepadProvider::DoPoll() {
diff --git a/content/browser/renderer_host/p2p/socket_dispatcher_host.cc b/content/browser/renderer_host/p2p/socket_dispatcher_host.cc
index 2e3afbd..4e3aef8 100644
--- a/content/browser/renderer_host/p2p/socket_dispatcher_host.cc
+++ b/content/browser/renderer_host/p2p/socket_dispatcher_host.cc
@@ -262,9 +262,15 @@ void P2PSocketDispatcherHost::OnAcceptIncomingTcpConnection(
   P2PSocketHost* socket = LookupSocket(listen_socket_id);
   if (!socket) {
     LOG(ERROR) << "Received P2PHostMsg_AcceptIncomingTcpConnection "
-        "for invalid socket_id.";
+        "for invalid listen_socket_id.";
     return;
   }
+  if (LookupSocket(connected_socket_id) != NULL) {
+    LOG(ERROR) << "Received P2PHostMsg_AcceptIncomingTcpConnection "
+        "for duplicated connected_socket_id.";
+    return;
+  }
+
   P2PSocketHost* accepted_connection =
       socket->AcceptIncomingTcpConnection(remote_address, connected_socket_id);
   if (accepted_connection) {
diff --git a/content/common/gpu/media/dxva_video_decode_accelerator.cc b/content/common/gpu/media/dxva_video_decode_accelerator.cc
index 27217e6..185e99d 100644
--- a/content/common/gpu/media/dxva_video_decode_accelerator.cc
+++ b/content/common/gpu/media/dxva_video_decode_accelerator.cc
@@ -633,7 +633,7 @@ void DXVAVideoDecodeAccelerator::AssignPictureBuffers(
     DCHECK(inserted);
   }
   ProcessPendingSamples();
-  if (state == kFlushing) {
+  if (pending_flush_) {
     decoder_thread_task_runner_->PostTask(
         FROM_HERE,
         base::Bind(&DXVAVideoDecodeAccelerator::FlushInternal,
@@ -672,7 +672,7 @@ void DXVAVideoDecodeAccelerator::ReusePictureBuffer(
 
   it->second->ReusePictureBuffer();
   ProcessPendingSamples();
-  if (state == kFlushing) {
+  if (pending_flush_) {
     decoder_thread_task_runner_->PostTask(
         FROM_HERE,
         base::Bind(&DXVAVideoDecodeAccelerator::FlushInternal,
@@ -1313,16 +1313,12 @@ void DXVAVideoDecodeAccelerator::FlushInternal() {
     }
   }
 
-  // The DoDecode function sets the state to kStopped when the decoder returns
-  // MF_E_TRANSFORM_NEED_MORE_INPUT.
-  // The MFT decoder can buffer upto 30 frames worth of input before returning
-  // an output frame. This loop here attempts to retrieve as many output frames
-  // as possible from the buffered set.
-  while (GetState() != kStopped) {
-    DoDecode();
-    if (OutputSamplesPresent())
-      return;
-  }
+  // Attempt to retrieve an output frame from the decoder. If we have one,
+  // return and proceed when the output frame is processed. If we don't have a
+  // frame then we are done.
+  DoDecode();
+  if (OutputSamplesPresent())
+    return;
 
   SetState(kFlushing);
 
@@ -1576,7 +1572,7 @@ void DXVAVideoDecodeAccelerator::CopySurfaceComplete(
       pending_output_samples_.pop_front();
   }
 
-  if (GetState() == kFlushing) {
+  if (pending_flush_) {
     decoder_thread_task_runner_->PostTask(
         FROM_HERE,
         base::Bind(&DXVAVideoDecodeAccelerator::FlushInternal,
diff --git a/content/renderer/render_frame_impl.cc b/content/renderer/render_frame_impl.cc
index dcda817..66912c0 100644
--- a/content/renderer/render_frame_impl.cc
+++ b/content/renderer/render_frame_impl.cc
@@ -905,6 +905,11 @@ void RenderFrameImpl::DidHideExternalPopupMenu() {
 #endif
 
 bool RenderFrameImpl::OnMessageReceived(const IPC::Message& msg) {
+  // We may get here while detaching, when the WebFrame has been deleted.  Do
+  // not process any messages in this state.
+  if (!frame_)
+    return false;
+
   // TODO(kenrb): document() should not be null, but as a transitional step
   // we have RenderFrameProxy 'wrapping' a RenderFrameImpl, passing messages
   // to this method. This happens for a top-level remote frame, where a
@@ -2048,8 +2053,11 @@ void RenderFrameImpl::frameDetached(blink::WebFrame* frame) {
   if (is_subframe)
     frame->parent()->removeChild(frame);
 
-  // |frame| is invalid after here.
+  // |frame| is invalid after here.  Be sure to clear frame_ as well, since this
+  // object may not be deleted immediately and other methods may try to access
+  // it.
   frame->close();
+  frame_ = nullptr;
 
   if (is_subframe) {
     delete this;
diff --git a/content/renderer/render_frame_impl.h b/content/renderer/render_frame_impl.h
index 2413312..7876a6e 100644
--- a/content/renderer/render_frame_impl.h
+++ b/content/renderer/render_frame_impl.h
@@ -707,7 +707,10 @@ class CONTENT_EXPORT RenderFrameImpl
   RendererCdmManager* GetCdmManager();
 #endif
 
-  // Stores the WebLocalFrame we are associated with.
+  // Stores the WebLocalFrame we are associated with.  This is null from the
+  // constructor until SetWebFrame is called, and it is null after
+  // frameDetached is called until destruction (which is asynchronous in the
+  // case of the main frame, but not subframes).
   blink::WebLocalFrame* frame_;
 
   base::WeakPtr<RenderViewImpl> render_view_;
diff --git a/content/renderer/render_view_browsertest.cc b/content/renderer/render_view_browsertest.cc
index 23b586a..fdbd1f2 100644
--- a/content/renderer/render_view_browsertest.cc
+++ b/content/renderer/render_view_browsertest.cc
@@ -286,6 +286,31 @@ class RenderViewImplTest : public RenderViewTest {
   scoped_ptr<MockKeyboard> mock_keyboard_;
 };
 
+// Test for https://crbug.com/461191.
+TEST_F(RenderViewImplTest, RenderFrameMessageAfterDetach) {
+  // Create a new main frame RenderFrame so that we don't interfere with the
+  // shutdown of frame() in RenderViewTest.TearDown.
+  blink::WebURLRequest popup_request(GURL("http://foo.com"));
+  blink::WebView* new_web_view = view()->createView(
+      GetMainFrame(), popup_request, blink::WebWindowFeatures(), "foo",
+      blink::WebNavigationPolicyNewForegroundTab, false);
+  RenderViewImpl* new_view = RenderViewImpl::FromWebView(new_web_view);
+  RenderFrameImpl* new_frame =
+      static_cast<RenderFrameImpl*>(new_view->GetMainRenderFrame());
+
+  // Detach the main frame.
+  new_view->Close();
+
+  // Before the frame is asynchronously deleted, it may receive a message.
+  // We should not crash here, and the message should not be processed.
+  scoped_ptr<const IPC::Message> msg(
+      new FrameMsg_Stop(frame()->GetRoutingID()));
+  EXPECT_FALSE(new_frame->OnMessageReceived(*msg));
+
+  // Clean up after the new view so we don't leak it.
+  new_view->Release();
+}
+
 TEST_F(RenderViewImplTest, SaveImageFromDataURL) {
   const IPC::Message* msg1 = render_thread_->sink().GetFirstMessageMatching(
       ViewHostMsg_SaveImageFromDataURL::ID);
diff --git a/content/renderer/render_view_impl.h b/content/renderer/render_view_impl.h
index 77b9932..b418a27 100644
--- a/content/renderer/render_view_impl.h
+++ b/content/renderer/render_view_impl.h
@@ -534,6 +534,7 @@ class CONTENT_EXPORT RenderViewImpl
   // code away from this class.
   friend class RenderFrameImpl;
 
+  FRIEND_TEST_ALL_PREFIXES(RenderViewImplTest, RenderFrameMessageAfterDetach);
   FRIEND_TEST_ALL_PREFIXES(RenderViewImplTest, DecideNavigationPolicyForWebUI);
   FRIEND_TEST_ALL_PREFIXES(RenderViewImplTest,
                            DidFailProvisionalLoadWithErrorForError);
diff --git a/gpu/command_buffer/service/gles2_cmd_decoder.cc b/gpu/command_buffer/service/gles2_cmd_decoder.cc
index 88e1974..c5c24b8 100644
--- a/gpu/command_buffer/service/gles2_cmd_decoder.cc
+++ b/gpu/command_buffer/service/gles2_cmd_decoder.cc
@@ -1630,11 +1630,16 @@ class GLES2DecoderImpl : public GLES2Decoder,
   // Validates the program and location for a glGetUniform call and returns
   // a SizeResult setup to receive the result. Returns true if glGetUniform
   // should be called.
-  bool GetUniformSetup(
-      GLuint program, GLint fake_location,
-      uint32 shm_id, uint32 shm_offset,
-      error::Error* error, GLint* real_location, GLuint* service_id,
-      void** result, GLenum* result_type);
+  bool GetUniformSetup(GLuint program,
+                       GLint fake_location,
+                       uint32 shm_id,
+                       uint32 shm_offset,
+                       error::Error* error,
+                       GLint* real_location,
+                       GLuint* service_id,
+                       void** result,
+                       GLenum* result_type,
+                       GLsizei* result_size);
 
   void MaybeExitOnContextLost();
   bool WasContextLost() override;
@@ -9430,11 +9435,16 @@ error::Error GLES2DecoderImpl::HandleGetVertexAttribPointerv(
   return error::kNoError;
 }
 
-bool GLES2DecoderImpl::GetUniformSetup(
-    GLuint program_id, GLint fake_location,
-    uint32 shm_id, uint32 shm_offset,
-    error::Error* error, GLint* real_location,
-    GLuint* service_id, void** result_pointer, GLenum* result_type) {
+bool GLES2DecoderImpl::GetUniformSetup(GLuint program_id,
+                                       GLint fake_location,
+                                       uint32 shm_id,
+                                       uint32 shm_offset,
+                                       error::Error* error,
+                                       GLint* real_location,
+                                       GLuint* service_id,
+                                       void** result_pointer,
+                                       GLenum* result_type,
+                                       GLsizei* result_size) {
   DCHECK(error);
   DCHECK(service_id);
   DCHECK(result_pointer);
@@ -9486,6 +9496,7 @@ bool GLES2DecoderImpl::GetUniformSetup(
     return false;
   }
   result->size = size;
+  *result_size = size;
   *result_type = type;
   return true;
 }
@@ -9498,12 +9509,13 @@ error::Error GLES2DecoderImpl::HandleGetUniformiv(uint32 immediate_data_size,
   GLint fake_location = c.location;
   GLuint service_id;
   GLenum result_type;
+  GLsizei result_size;
   GLint real_location = -1;
   Error error;
   void* result;
-  if (GetUniformSetup(
-      program, fake_location, c.params_shm_id, c.params_shm_offset,
-      &error, &real_location, &service_id, &result, &result_type)) {
+  if (GetUniformSetup(program, fake_location, c.params_shm_id,
+                      c.params_shm_offset, &error, &real_location, &service_id,
+                      &result, &result_type, &result_size)) {
     glGetUniformiv(
         service_id, real_location,
         static_cast<cmds::GetUniformiv::Result*>(result)->GetData());
@@ -9523,13 +9535,14 @@ error::Error GLES2DecoderImpl::HandleGetUniformfv(uint32 immediate_data_size,
   typedef cmds::GetUniformfv::Result Result;
   Result* result;
   GLenum result_type;
-  if (GetUniformSetup(
-      program, fake_location, c.params_shm_id, c.params_shm_offset,
-      &error, &real_location, &service_id,
-      reinterpret_cast<void**>(&result), &result_type)) {
+  GLsizei result_size;
+  if (GetUniformSetup(program, fake_location, c.params_shm_id,
+                      c.params_shm_offset, &error, &real_location, &service_id,
+                      reinterpret_cast<void**>(&result), &result_type,
+                      &result_size)) {
     if (result_type == GL_BOOL || result_type == GL_BOOL_VEC2 ||
         result_type == GL_BOOL_VEC3 || result_type == GL_BOOL_VEC4) {
-      GLsizei num_values = result->GetNumResults();
+      GLsizei num_values = result_size / sizeof(Result::Type);
       scoped_ptr<GLint[]> temp(new GLint[num_values]);
       glGetUniformiv(service_id, real_location, temp.get());
       GLfloat* dst = result->GetData();
diff --git a/media/base/android/java/src/org/chromium/media/VideoCaptureCamera2.java b/media/base/android/java/src/org/chromium/media/VideoCaptureCamera2.java
index 802792b..2fe557b 100644
--- a/media/base/android/java/src/org/chromium/media/VideoCaptureCamera2.java
+++ b/media/base/android/java/src/org/chromium/media/VideoCaptureCamera2.java
@@ -264,12 +264,19 @@ public class VideoCaptureCamera2 extends VideoCapture {
             } else {
                 // Copy pixels one by one respecting pixelStride and rowStride.
                 byte[] rowData = new byte[rowStride];
-                for (int row = 0; row < planeHeight; ++row) {
+                for (int row = 0; row < planeHeight - 1; ++row) {
                     buffer.get(rowData, 0, rowStride);
                     for (int col = 0; col < planeWidth; ++col) {
                         data[offset++] = rowData[col * pixelStride];
                     }
                 }
+
+                // Last row is special in some devices and may not contain the full
+                // |rowStride| bytes of data. See http://crbug.com/458701.
+                buffer.get(rowData, 0, Math.min(rowStride, buffer.remaining()));
+                for (int col = 0; col < planeWidth; ++col) {
+                    data[offset++] = rowData[col * pixelStride];
+                }
             }
         }
     }
diff --git a/third_party/harfbuzz-ng/src/hb-buffer.cc b/third_party/harfbuzz-ng/src/hb-buffer.cc
index 2b73ef8..5fdd6fb 100644
--- a/third_party/harfbuzz-ng/src/hb-buffer.cc
+++ b/third_party/harfbuzz-ng/src/hb-buffer.cc
@@ -443,7 +443,7 @@ hb_buffer_t::reverse_range (unsigned int start,
 {
   unsigned int i, j;
 
-  if (start == end - 1)
+  if (end - start < 2)
     return;
 
   for (i = start, j = end - 1; i < j; i++, j--) {
diff --git a/ui/file_manager/file_manager/foreground/js/metadata/compiled_resources.gyp b/ui/file_manager/file_manager/foreground/js/metadata/compiled_resources.gyp
index 669a54c..15bcbaf 100644
--- a/ui/file_manager/file_manager/foreground/js/metadata/compiled_resources.gyp
+++ b/ui/file_manager/file_manager/foreground/js/metadata/compiled_resources.gyp
@@ -18,6 +18,7 @@
 	  'function_parallel.js',
 	],
 	'externs': [
+          '../../../../externs/exif_entry.js',
           '../../../../externs/platform_worker.js',
 	]
       },
diff --git a/ui/file_manager/file_manager/foreground/js/metadata/exif_parser.js b/ui/file_manager/file_manager/foreground/js/metadata/exif_parser.js
index e70fe3b..5fb2e01 100644
--- a/ui/file_manager/file_manager/foreground/js/metadata/exif_parser.js
+++ b/ui/file_manager/file_manager/foreground/js/metadata/exif_parser.js
@@ -362,6 +362,7 @@ ExifParser.prototype.readTagValue = function(br, tag) {
       } else {
         tag.value = String.fromCharCode.apply(null, tag.value);
       }
+      this.validateAndFixStringTag_(tag);
       break;
 
     case 3: // Short
@@ -400,6 +401,23 @@ ExifParser.prototype.readTagValue = function(br, tag) {
 };
 
 /**
+ * Validates string tag value, and fix it if necessary.
+ * @param {!ExifEntry} tag A tag to be validated and fixed.
+ * @private
+ */
+ExifParser.prototype.validateAndFixStringTag_ = function(tag) {
+  if (tag.format === 2) { // string
+    // String should end with null character.
+    if (tag.value.charAt(tag.value.length - 1) !== '\0') {
+      tag.value += '\0';
+      tag.componentCount = tag.value.length;
+      this.vlog('Invalid format: 0x' + tag.id.toString(16) + '/' + tag.format +
+          ': Did not end with null character. Null character is appended.');
+    }
+  }
+};
+
+/**
  * Map from the exif orientation value to the horizontal scale value.
  * @const
  * @type {Array.<number>}
diff --git a/ui/file_manager/file_manager/foreground/js/metadata/exif_parser_unittest.html b/ui/file_manager/file_manager/foreground/js/metadata/exif_parser_unittest.html
new file mode 100644
index 0000000..0d96a8b
--- /dev/null
+++ b/ui/file_manager/file_manager/foreground/js/metadata/exif_parser_unittest.html
@@ -0,0 +1,20 @@
+<!DOCTYPE html>
+<!-- Copyright 2015 The Chromium Authors. All rights reserved.
+  -- Use of this source code is governed by a BSD-style license that can be
+  -- found in the LICENSE file.
+  -->
+
+<script type="text/javascript">
+  function importScripts(script) {}
+</script>
+
+<script src="../../../../gallery/js/image_editor/image_encoder.js"></script>
+<script src="../../../../gallery/js/image_editor/exif_encoder.js"></script>
+
+<script src="metadata_dispatcher.js"></script>
+<script src="metadata_parser.js"></script>
+<script src="byte_reader.js"></script>
+<script src="exif_constants.js"></script>
+<script src="exif_parser.js"></script>
+
+<script src="exif_parser_unittest.js"></script>
diff --git a/ui/file_manager/file_manager/foreground/js/metadata/exif_parser_unittest.js b/ui/file_manager/file_manager/foreground/js/metadata/exif_parser_unittest.js
new file mode 100644
index 0000000..eefe242
--- /dev/null
+++ b/ui/file_manager/file_manager/foreground/js/metadata/exif_parser_unittest.js
@@ -0,0 +1,67 @@
+// Copyright 2015 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+/**
+ * Creates a directory with specified tag. This method only supports string
+ * format tag which is longer than 4 characters.
+ * @param {!TypedArray} bytes Bytes to be written.
+ * @param {!ExifEntry} tag An exif entry which will be written.
+ */
+function writeDirectory_(bytes, tag) {
+  assertEquals(2, tag.format);
+  assertTrue(tag.componentCount > 4);
+
+  var byteWriter = new ByteWriter(bytes.buffer, 0);
+  byteWriter.writeScalar(1, 2); // Number of fields.
+
+  byteWriter.writeScalar(tag.id, 2);
+  byteWriter.writeScalar(tag.format, 2);
+  byteWriter.writeScalar(tag.componentCount, 4);
+  byteWriter.forward(tag.id, 4);
+
+  byteWriter.writeScalar(0, 4); // Offset to next IFD.
+
+  byteWriter.resolveOffset(tag.id);
+  byteWriter.writeString(tag.value);
+
+  byteWriter.checkResolved();
+}
+
+/**
+ * Parses exif data and return parsed tags.
+ * @param {!TypedArray} bytes Bytes to be read.
+ * @return {!Object<!Exif.Tag, !ExifEntry>} Tags.
+ */
+function parseExifData_(bytes) {
+  var exifParser = new ExifParser(this);
+  exifParser.log = function(arg) { console.log(arg); };
+  exifParser.vlog = function(arg) { console.log(arg); };
+
+  var tags = {};
+  var byteReader = new ByteReader(bytes.buffer);
+  assertEquals(0, exifParser.readDirectory(byteReader, tags));
+  return tags;
+}
+
+/**
+ * Test case a string doest not end with null character termination.
+ */
+function testWithoutNullCharacterTermination() {
+  // Create a data which doesn't end with null character.
+  var bytes = new Uint8Array(0x10000);
+  writeDirectory_(bytes, {
+    id: 0x10f, // Manufacture.
+    format: 2, // String.
+    componentCount: 11,
+    value: 'Manufacture'
+  });
+
+  // Parse the data.
+  var tags = parseExifData_(bytes);
+
+  // Null character should be added at the end of value.
+  var manufactureTag = tags[0x10f];
+  assertEquals(12, manufactureTag.componentCount);
+  assertEquals('Manufacture\0', manufactureTag.value);
+}
-- 
2.4.0

